{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/construct.js","webpack:///./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack:///./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack:///./node_modules/mobx/lib/mobx.es6.js","webpack:///./node_modules/process/browser.js","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///../src/constants.js","webpack:///../src/options.js","webpack:///../src/component.js","webpack:///../src/render.js","webpack:///../src/util.js","webpack:///../src/create-element.js","webpack:///../src/diff/children.js","webpack:///../src/diff/props.js","webpack:///../src/diff/index.js","webpack:///../src/diff/catch-error.js","webpack:///./client/store.js","webpack:///./client/components/module-viewer.jsx","webpack:///./client/index.jsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_typeof","obj","iterator","constructor","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","configurable","writable","_createClass","protoProps","staticProps","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","_slicedToArray","arr","Array","isArray","arrayWithHoles","toString","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","iterableToArrayLimit","nonIterableRest","_inherits","subClass","superClass","_possibleConstructorReturn","self","ReferenceError","assertThisInitialized","_toConsumableArray","arr2","arrayWithoutHoles","iter","from","iterableToArray","nonIterableSpread","_construct","Parent","args","Class","Reflect","construct","sham","Proxy","Date","e","isNativeReflectConstruct","a","apply","Function","arguments","_wrapNativeSuper","_cache","Map","fn","indexOf","has","set","Wrapper","this","OBFUSCATED_ERROR","EMPTY_ARRAY","freeze","EMPTY_OBJECT","getNextId","globalState","mobxGuid","fail","message","invariant","check","Error","once","func","invoked","noop","isObject","isPlainObject","proto","addHiddenProp","propName","assertPropertyConfigurable","prop","process","createInstanceofPredicate","clazz","x","isES6Map","thing","isES6Set","Set","getPlainObjectKeys","enumerables","add","getOwnPropertySymbols","forEach","k","getOwnPropertyDescriptor","stringifyKey","String","toPrimitive","$mobx","Atom","isPendingUnobservation","isBeingObserved","observers","diffValue","lastAccessedBy","lowestObserverState","IDerivationState","NOT_TRACKING","onBecomeObservedListeners","listener","onBecomeUnobservedListeners","reportObserved","startBatch","observable","STALE","dependenciesState","UP_TO_DATE","isTracing","TraceMode","NONE","logTraceInfo","onBecomeStale","propagateChanged","endBatch","isAtom","createAtom","arg3","onBecomeObservedHandler","onBecomeUnobservedHandler","atom","interceptHook","onBecomeUnobserved","comparer","identity","b","structural","deepEqual","default","is","shallow","mobxDidRunLazyInitializersSymbol","mobxPendingDecorators","enumerableDescriptorCache","nonEnumerableDescriptorCache","createPropertyInitializerDescriptor","cache","initializeInstance","decorators","keys","propertyCreator","decoratorTarget","decoratorArguments","createPropDecorator","propertyInitiallyEnumerable","decorator","applyImmediately","inheritedDecorators","assign","quacksLikeADecorator","slice","deepEnhancer","v","_","isObservable","array","map","referenceEnhancer","newValue","createDecoratorForEnhancer","enhancer","propertyName","_decoratorTarget","decoratorArgs","initialValue","initializer","asObservableObject","addObservableProp","res","env","defaultCreateObservableOptions","deep","defaultDecorator","proxy","asCreateObservableOptions","deepDecorator","shallowDecorator","isObservableObject","isObservableArray","isObservableMap","isObservableSet","refDecorator","refStructDecorator","oldValue","getEnhancerFromOptions","options","observableFactories","box","incorrectlyUsedAsDecorator","ObservableValue","equals","initialValues","createObservableArray","ObservableMap","ObservableSet","extendObservable","getDefaultDecoratorFromObjectOptions","base","createDynamicObservableObject","extendObservableObjectWithProperties","ref","struct","arg2","methodName","computedDecorator","addComputedProp","context","CaughtException","cause","isCaughtException","shouldCompute","derivation","POSSIBLY_STALE","prevUntracked","untrackedStart","obs","observing","isComputedValue","disableErrorBoundaries","untrackedEnd","changeDependenciesStateTo0","checkIfStateModificationsAreAllowed","hasObservers","size","computationDepth","allowStateChanges","enforceActions","trackDerivedFunction","f","prevAllowStateReads","allowStateReadsStart","newObserving","unboundDepsCount","runId","result","prevTracking","trackingDerivation","prevObserving","lowestNewObservingDerivationState","i0","dep","removeObserver","addObserver","bindDependencies","allowStateReadsEnd","clearObserving","untracked","action","prev","allowStateReads","currentActionId","nextActionId","createAction","actionName","executeAction","isMobxAction","scope","runInfo","startTime","prevDerivation","prevAllowStateChanges","allowStateChangesStart","notifySpy","actionId","parentActionId","_startAction","error","suppressReactionErrors","allowStateChangesEnd","_endAction","hasUnreportedChange","dehancer","prepareNewValue","UNCHANGED","setNewValue","hasInterceptors","change","interceptChange","type","reportChanged","hasListeners","notifyListeners","dehanceValue","handler","registerInterceptor","fireImmediately","registerListener","valueOf","ComputedValue","__mapid","isComputing","isRunningSetter","setter","compareStructural","requiresReaction","keepAlive","propagateMaybeChanged","inBatch","trackAndCompute","propagateChangeConfirmed","warnAboutUntrackedRead","computeValue","wasSuspended","changed","track","firstTime","prevValue","autorun","prevU","MobXGlobals","version","pendingUnobservations","pendingReactions","isRunningReactions","spyListeners","globalReactionErrorHandlers","computedRequiresReaction","reactionRequiresObservable","observableRequiresReaction","computedConfigurable","mockGlobal","getGlobal","window","global","canMergeGlobalState","isolateCalled","__mobxInstanceCount","__mobxGlobals","setTimeout","node","queueForUnobservation","runReactions","list","suspend","onBecomeObserved","console","log","BREAK","lines","printDepTree","tree","depth","join","dependencies","child","nodeToDependencyTree","getAtom","replace","Reaction","onInvalidate","errorHandler","requiresObservable","isDisposed","_isScheduled","_isTrackPending","_isRunning","schedule","reportExceptionInDerivation","warn","dispose","enterBreakPoint","trace","MAX_REACTION_ITERATIONS","reactionScheduler","runReactionsHelper","allReactions","iterations","splice","remainingReactions","runReaction","isReaction","dontReassignFields","namedActionDecorator","actionFieldDecorator","arg1","arg4","defineBoundAction","view","opts","reaction","scheduler","delay","reactionRunner","onError","createSchedulerFromOptions","isScheduled","getDisposer","bound","applyToInstance","run","hook","cb","listenersKey","hookListeners","properties","resultDescriptor","item","_isObservable","values","pop","getAtomFromArgs","LOG","transaction","thisArg","getAdm","isPropertyKey","val","objectProxyTraps","adm","write","defaultEnhancer","parseInt","deleteProperty","remove","ownKeys","keysAtom","preventExtensions","interceptable","interceptors","idx","listenable","changeListeners","listeners","arrayTraps","getArrayLength","arrayExtensions","isNaN","setArrayLength","owned","ObservableArrayAdministration","spliceWithArray","lastKnownLength","newV","oldV","index","added","addedCount","removed","removedCount","newLength","currentLength","newItems","oldLength","delta","deleteCount","Math","max","min","spliceItemsIntoValues","notifyArraySplice","dehanceValues","concat","notify","intercept","observe","clear","toJS","toJSON","items","shift","unshift","reverse","clone","sort","compareFn","notifyArrayChildUpdate","funcName","_a","isObservableArrayAdministration","_a$1","ObservableMapMarker","initialData","_keysAtom","_data","_hasMap","merge","_has","entry","newEntry","hasKey","_updateValue","_addValue","_updateHasMapEntry","nextIndex","makeIterable","entries","callback","other","newKeys","filter","toPOJO","ObservableSetMarker","_atom","callbackFn","observableValues","ObservableObjectAdministration","pendingKeys","exists","generateObservablePropConfig","notifyPropertyAddition","propertyOwner","computedPropertyConfigs","getAdministrationForComputedPropOwner","read","generateComputedPropConfig","oldObservable","owner","observablePropertyConfigs","isObservableObjectAdministration","anyThing","getAdministration","eq","aStack","bStack","unwrap","className","areArrays","aCtor","bCtor","has$1","getSelf","__MOBX_DEVTOOLS_GLOBAL_HOOK__","injectMobx","spy","extras","getDebugName","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","marker","runClearTimeout","Item","nextTick","title","browser","argv","versions","on","addListener","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","g","originalModule","webpackPolyfill","children","q","defer","prevDebounce","IS_HYDRATE","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","removeNode","parentNode","removeChild","createVNode","vnode","_children","_parent","_depth","_dom","_lastDomChild","_component","Fragment","Component","getDomSibling","childIndex","sibling","updateParentDomPointers","enqueueRender","_dirty","debounceRendering","component","commitQueue","newDom","oldDom","parentDom","_vnode","_parentDom","diff","_context","ownerSVGElement","commitRoot","diffChildren","newParentVNode","oldParentVNode","isSvg","excessDomChildren","isHydrating","j","oldVNode","sibDom","firstChildDom","refs","oldChildren","oldChildrenLength","toChildArray","childVNode","outer","appendChild","nextSibling","insertBefore","unmount","applyRef","flattened","setStyle","style","setProperty","test","dom","useCapture","nameLower","cssText","toLowerCase","addEventListener","eventProxy","_listeners","removeEventListener","removeAttributeNS","setAttributeNS","removeAttribute","setAttribute","event","newVNode","tmp","isNew","oldProps","oldState","snapshot","clearProcessingException","newProps","provider","cctx","newType","_diff","contextType","_id","_defaultValue","_processingException","_pendingError","render","doRender","sub","state","_renderCallbacks","_nextState","getDerivedStateFromProps","componentWillMount","componentDidMount","_force","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","_render","getChildContext","getSnapshotBeforeUpdate","diffElementNodes","diffed","_catchError","root","_commit","some","oldHtml","newHtml","nodeType","localName","document","createTextNode","createElementNS","createElement","data","childNodes","dangerouslySetInnerHTML","attributes","__html","innerHTML","hydrate","diffProps","checked","current","parentVNode","skipRemove","componentWillUnmount","replaceNode","_root","normalizedProps","defaultProps","getDerivedStateFromError","setState","componentDidCatch","update","forceUpdate","Promise","then","resolve","store","ModuleViewer","enableWebSocket","WebSocket","location","host","setData","getElementById"],"mappings":"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","file":"viewer.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","export default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import setPrototypeOf from \"./setPrototypeOf\";\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport setPrototypeOf from \"./setPrototypeOf\";\nimport isNativeFunction from \"./isNativeFunction\";\nimport construct from \"./construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/** MobX - (c) Michel Weststrate 2015 - 2019 - MIT Licensed */\nconst OBFUSCATED_ERROR = \"An invariant failed, however the error is obfuscated because this is an production build.\";\nconst EMPTY_ARRAY = [];\nObject.freeze(EMPTY_ARRAY);\nconst EMPTY_OBJECT = {};\nObject.freeze(EMPTY_OBJECT);\nfunction getNextId() {\n    return ++globalState.mobxGuid;\n}\nfunction fail(message) {\n    invariant(false, message);\n    throw \"X\"; // unreachable\n}\nfunction invariant(check, message) {\n    if (!check)\n        throw new Error(\"[mobx] \" + (message || OBFUSCATED_ERROR));\n}\n/**\n * Prints a deprecation message, but only one time.\n * Returns false if the deprecated message was already printed before\n */\nconst deprecatedMessages = [];\nfunction deprecated(msg, thing) {\n    if (process.env.NODE_ENV === \"production\")\n        return false;\n    if (thing) {\n        return deprecated(`'${msg}', use '${thing}' instead.`);\n    }\n    if (deprecatedMessages.indexOf(msg) !== -1)\n        return false;\n    deprecatedMessages.push(msg);\n    console.error(\"[mobx] Deprecated: \" + msg);\n    return true;\n}\n/**\n * Makes sure that the provided function is invoked at most once.\n */\nfunction once(func) {\n    let invoked = false;\n    return function () {\n        if (invoked)\n            return;\n        invoked = true;\n        return func.apply(this, arguments);\n    };\n}\nconst noop = () => { };\nfunction unique(list) {\n    const res = [];\n    list.forEach(item => {\n        if (res.indexOf(item) === -1)\n            res.push(item);\n    });\n    return res;\n}\nfunction isObject(value) {\n    return value !== null && typeof value === \"object\";\n}\nfunction isPlainObject(value) {\n    if (value === null || typeof value !== \"object\")\n        return false;\n    const proto = Object.getPrototypeOf(value);\n    return proto === Object.prototype || proto === null;\n}\nfunction addHiddenProp(object, propName, value) {\n    Object.defineProperty(object, propName, {\n        enumerable: false,\n        writable: true,\n        configurable: true,\n        value\n    });\n}\nfunction addHiddenFinalProp(object, propName, value) {\n    Object.defineProperty(object, propName, {\n        enumerable: false,\n        writable: false,\n        configurable: true,\n        value\n    });\n}\nfunction isPropertyConfigurable(object, prop) {\n    const descriptor = Object.getOwnPropertyDescriptor(object, prop);\n    return !descriptor || (descriptor.configurable !== false && descriptor.writable !== false);\n}\nfunction assertPropertyConfigurable(object, prop) {\n    if (process.env.NODE_ENV !== \"production\" && !isPropertyConfigurable(object, prop))\n        fail(`Cannot make property '${prop.toString()}' observable, it is not configurable and writable in the target object`);\n}\nfunction createInstanceofPredicate(name, clazz) {\n    const propName = \"isMobX\" + name;\n    clazz.prototype[propName] = true;\n    return function (x) {\n        return isObject(x) && x[propName] === true;\n    };\n}\n/**\n * Returns whether the argument is an array, disregarding observability.\n */\nfunction isArrayLike(x) {\n    return Array.isArray(x) || isObservableArray(x);\n}\nfunction isES6Map(thing) {\n    return thing instanceof Map;\n}\nfunction isES6Set(thing) {\n    return thing instanceof Set;\n}\n/**\n * Returns the following: own keys, prototype keys & own symbol keys, if they are enumerable.\n */\nfunction getPlainObjectKeys(object) {\n    const enumerables = new Set();\n    for (let key in object)\n        enumerables.add(key); // *all* enumerables\n    Object.getOwnPropertySymbols(object).forEach(k => {\n        if (Object.getOwnPropertyDescriptor(object, k).enumerable)\n            enumerables.add(k);\n    }); // *own* symbols\n    // Note: this implementation is missing enumerable, inherited, symbolic property names! That would however pretty expensive to add,\n    // as there is no efficient iterator that returns *all* properties\n    return Array.from(enumerables);\n}\nfunction stringifyKey(key) {\n    if (key && key.toString)\n        return key.toString();\n    else\n        return new String(key).toString();\n}\nfunction getMapLikeKeys(map) {\n    if (isPlainObject(map))\n        return Object.keys(map);\n    if (Array.isArray(map))\n        return map.map(([key]) => key);\n    if (isES6Map(map) || isObservableMap(map))\n        return Array.from(map.keys());\n    return fail(`Cannot get keys from '${map}'`);\n}\nfunction toPrimitive(value) {\n    return value === null ? null : typeof value === \"object\" ? \"\" + value : value;\n}\n\nconst $mobx = Symbol(\"mobx administration\");\nclass Atom {\n    /**\n     * Create a new atom. For debugging purposes it is recommended to give it a name.\n     * The onBecomeObserved and onBecomeUnobserved callbacks can be used for resource management.\n     */\n    constructor(name = \"Atom@\" + getNextId()) {\n        this.name = name;\n        this.isPendingUnobservation = false; // for effective unobserving. BaseAtom has true, for extra optimization, so its onBecomeUnobserved never gets called, because it's not needed\n        this.isBeingObserved = false;\n        this.observers = new Set();\n        this.diffValue = 0;\n        this.lastAccessedBy = 0;\n        this.lowestObserverState = IDerivationState.NOT_TRACKING;\n    }\n    onBecomeObserved() {\n        if (this.onBecomeObservedListeners) {\n            this.onBecomeObservedListeners.forEach(listener => listener());\n        }\n    }\n    onBecomeUnobserved() {\n        if (this.onBecomeUnobservedListeners) {\n            this.onBecomeUnobservedListeners.forEach(listener => listener());\n        }\n    }\n    /**\n     * Invoke this method to notify mobx that your atom has been used somehow.\n     * Returns true if there is currently a reactive context.\n     */\n    reportObserved() {\n        return reportObserved(this);\n    }\n    /**\n     * Invoke this method _after_ this method has changed to signal mobx that all its observers should invalidate.\n     */\n    reportChanged() {\n        startBatch();\n        propagateChanged(this);\n        endBatch();\n    }\n    toString() {\n        return this.name;\n    }\n}\nconst isAtom = createInstanceofPredicate(\"Atom\", Atom);\nfunction createAtom(name, onBecomeObservedHandler = noop, onBecomeUnobservedHandler = noop) {\n    const atom = new Atom(name);\n    // default `noop` listener will not initialize the hook Set\n    if (onBecomeObservedHandler !== noop) {\n        onBecomeObserved(atom, onBecomeObservedHandler);\n    }\n    if (onBecomeUnobservedHandler !== noop) {\n        onBecomeUnobserved(atom, onBecomeUnobservedHandler);\n    }\n    return atom;\n}\n\nfunction identityComparer(a, b) {\n    return a === b;\n}\nfunction structuralComparer(a, b) {\n    return deepEqual(a, b);\n}\nfunction shallowComparer(a, b) {\n    return deepEqual(a, b, 1);\n}\nfunction defaultComparer(a, b) {\n    return Object.is(a, b);\n}\nconst comparer = {\n    identity: identityComparer,\n    structural: structuralComparer,\n    default: defaultComparer,\n    shallow: shallowComparer\n};\n\nconst mobxDidRunLazyInitializersSymbol = Symbol(\"mobx did run lazy initializers\");\nconst mobxPendingDecorators = Symbol(\"mobx pending decorators\");\nconst enumerableDescriptorCache = {};\nconst nonEnumerableDescriptorCache = {};\nfunction createPropertyInitializerDescriptor(prop, enumerable) {\n    const cache = enumerable ? enumerableDescriptorCache : nonEnumerableDescriptorCache;\n    return (cache[prop] ||\n        (cache[prop] = {\n            configurable: true,\n            enumerable: enumerable,\n            get() {\n                initializeInstance(this);\n                return this[prop];\n            },\n            set(value) {\n                initializeInstance(this);\n                this[prop] = value;\n            }\n        }));\n}\nfunction initializeInstance(target) {\n    if (target[mobxDidRunLazyInitializersSymbol] === true)\n        return;\n    const decorators = target[mobxPendingDecorators];\n    if (decorators) {\n        addHiddenProp(target, mobxDidRunLazyInitializersSymbol, true);\n        // Build property key array from both strings and symbols\n        const keys = [...Object.getOwnPropertySymbols(decorators), ...Object.keys(decorators)];\n        for (const key of keys) {\n            const d = decorators[key];\n            d.propertyCreator(target, d.prop, d.descriptor, d.decoratorTarget, d.decoratorArguments);\n        }\n    }\n}\nfunction createPropDecorator(propertyInitiallyEnumerable, propertyCreator) {\n    return function decoratorFactory() {\n        let decoratorArguments;\n        const decorator = function decorate(target, prop, descriptor, applyImmediately\n        // This is a special parameter to signal the direct application of a decorator, allow extendObservable to skip the entire type decoration part,\n        // as the instance to apply the decorator to equals the target\n        ) {\n            if (applyImmediately === true) {\n                propertyCreator(target, prop, descriptor, target, decoratorArguments);\n                return null;\n            }\n            if (process.env.NODE_ENV !== \"production\" && !quacksLikeADecorator(arguments))\n                fail(\"This function is a decorator, but it wasn't invoked like a decorator\");\n            if (!Object.prototype.hasOwnProperty.call(target, mobxPendingDecorators)) {\n                const inheritedDecorators = target[mobxPendingDecorators];\n                addHiddenProp(target, mobxPendingDecorators, Object.assign({}, inheritedDecorators));\n            }\n            target[mobxPendingDecorators][prop] = {\n                prop,\n                propertyCreator,\n                descriptor,\n                decoratorTarget: target,\n                decoratorArguments\n            };\n            return createPropertyInitializerDescriptor(prop, propertyInitiallyEnumerable);\n        };\n        if (quacksLikeADecorator(arguments)) {\n            // @decorator\n            decoratorArguments = EMPTY_ARRAY;\n            return decorator.apply(null, arguments);\n        }\n        else {\n            // @decorator(args)\n            decoratorArguments = Array.prototype.slice.call(arguments);\n            return decorator;\n        }\n    };\n}\nfunction quacksLikeADecorator(args) {\n    return (((args.length === 2 || args.length === 3) &&\n        (typeof args[1] === \"string\" || typeof args[1] === \"symbol\")) ||\n        (args.length === 4 && args[3] === true));\n}\n\nfunction deepEnhancer(v, _, name) {\n    // it is an observable already, done\n    if (isObservable(v))\n        return v;\n    // something that can be converted and mutated?\n    if (Array.isArray(v))\n        return observable.array(v, { name });\n    if (isPlainObject(v))\n        return observable.object(v, undefined, { name });\n    if (isES6Map(v))\n        return observable.map(v, { name });\n    if (isES6Set(v))\n        return observable.set(v, { name });\n    return v;\n}\nfunction shallowEnhancer(v, _, name) {\n    if (v === undefined || v === null)\n        return v;\n    if (isObservableObject(v) || isObservableArray(v) || isObservableMap(v) || isObservableSet(v))\n        return v;\n    if (Array.isArray(v))\n        return observable.array(v, { name, deep: false });\n    if (isPlainObject(v))\n        return observable.object(v, undefined, { name, deep: false });\n    if (isES6Map(v))\n        return observable.map(v, { name, deep: false });\n    if (isES6Set(v))\n        return observable.set(v, { name, deep: false });\n    return fail(process.env.NODE_ENV !== \"production\" &&\n        \"The shallow modifier / decorator can only used in combination with arrays, objects, maps and sets\");\n}\nfunction referenceEnhancer(newValue) {\n    // never turn into an observable\n    return newValue;\n}\nfunction refStructEnhancer(v, oldValue, name) {\n    if (process.env.NODE_ENV !== \"production\" && isObservable(v))\n        throw `observable.struct should not be used with observable values`;\n    if (deepEqual(v, oldValue))\n        return oldValue;\n    return v;\n}\n\nfunction createDecoratorForEnhancer(enhancer) {\n    invariant(enhancer);\n    const decorator = createPropDecorator(true, (target, propertyName, descriptor, _decoratorTarget, decoratorArgs) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(!descriptor || !descriptor.get, `@observable cannot be used on getter (property \"${stringifyKey(propertyName)}\"), use @computed instead.`);\n        }\n        const initialValue = descriptor\n            ? descriptor.initializer\n                ? descriptor.initializer.call(target)\n                : descriptor.value\n            : undefined;\n        asObservableObject(target).addObservableProp(propertyName, initialValue, enhancer);\n    });\n    const res = \n    // Extra process checks, as this happens during module initialization\n    typeof process !== \"undefined\" && process.env && process.env.NODE_ENV !== \"production\"\n        ? function observableDecorator() {\n            // This wrapper function is just to detect illegal decorator invocations, deprecate in a next version\n            // and simply return the created prop decorator\n            if (arguments.length < 2)\n                return fail(\"Incorrect decorator invocation. @observable decorator doesn't expect any arguments\");\n            return decorator.apply(null, arguments);\n        }\n        : decorator;\n    res.enhancer = enhancer;\n    return res;\n}\n\n// Predefined bags of create observable options, to avoid allocating temporarily option objects\n// in the majority of cases\nconst defaultCreateObservableOptions = {\n    deep: true,\n    name: undefined,\n    defaultDecorator: undefined,\n    proxy: true\n};\nObject.freeze(defaultCreateObservableOptions);\nfunction assertValidOption(key) {\n    if (!/^(deep|name|equals|defaultDecorator|proxy)$/.test(key))\n        fail(`invalid option for (extend)observable: ${key}`);\n}\nfunction asCreateObservableOptions(thing) {\n    if (thing === null || thing === undefined)\n        return defaultCreateObservableOptions;\n    if (typeof thing === \"string\")\n        return { name: thing, deep: true, proxy: true };\n    if (process.env.NODE_ENV !== \"production\") {\n        if (typeof thing !== \"object\")\n            return fail(\"expected options object\");\n        Object.keys(thing).forEach(assertValidOption);\n    }\n    return thing;\n}\nconst deepDecorator = createDecoratorForEnhancer(deepEnhancer);\nconst shallowDecorator = createDecoratorForEnhancer(shallowEnhancer);\nconst refDecorator = createDecoratorForEnhancer(referenceEnhancer);\nconst refStructDecorator = createDecoratorForEnhancer(refStructEnhancer);\nfunction getEnhancerFromOptions(options) {\n    return options.defaultDecorator\n        ? options.defaultDecorator.enhancer\n        : options.deep === false\n            ? referenceEnhancer\n            : deepEnhancer;\n}\n/**\n * Turns an object, array or function into a reactive structure.\n * @param v the value which should become observable.\n */\nfunction createObservable(v, arg2, arg3) {\n    // @observable someProp;\n    if (typeof arguments[1] === \"string\" || typeof arguments[1] === \"symbol\") {\n        return deepDecorator.apply(null, arguments);\n    }\n    // it is an observable already, done\n    if (isObservable(v))\n        return v;\n    // something that can be converted and mutated?\n    const res = isPlainObject(v)\n        ? observable.object(v, arg2, arg3)\n        : Array.isArray(v)\n            ? observable.array(v, arg2)\n            : isES6Map(v)\n                ? observable.map(v, arg2)\n                : isES6Set(v)\n                    ? observable.set(v, arg2)\n                    : v;\n    // this value could be converted to a new observable data structure, return it\n    if (res !== v)\n        return res;\n    // otherwise, just box it\n    fail(process.env.NODE_ENV !== \"production\" &&\n        `The provided value could not be converted into an observable. If you want just create an observable reference to the object use 'observable.box(value)'`);\n}\nconst observableFactories = {\n    box(value, options) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"box\");\n        const o = asCreateObservableOptions(options);\n        return new ObservableValue(value, getEnhancerFromOptions(o), o.name, true, o.equals);\n    },\n    array(initialValues, options) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"array\");\n        const o = asCreateObservableOptions(options);\n        return createObservableArray(initialValues, getEnhancerFromOptions(o), o.name);\n    },\n    map(initialValues, options) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"map\");\n        const o = asCreateObservableOptions(options);\n        return new ObservableMap(initialValues, getEnhancerFromOptions(o), o.name);\n    },\n    set(initialValues, options) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"set\");\n        const o = asCreateObservableOptions(options);\n        return new ObservableSet(initialValues, getEnhancerFromOptions(o), o.name);\n    },\n    object(props, decorators, options) {\n        if (typeof arguments[1] === \"string\")\n            incorrectlyUsedAsDecorator(\"object\");\n        const o = asCreateObservableOptions(options);\n        if (o.proxy === false) {\n            return extendObservable({}, props, decorators, o);\n        }\n        else {\n            const defaultDecorator = getDefaultDecoratorFromObjectOptions(o);\n            const base = extendObservable({}, undefined, undefined, o);\n            const proxy = createDynamicObservableObject(base);\n            extendObservableObjectWithProperties(proxy, props, decorators, defaultDecorator);\n            return proxy;\n        }\n    },\n    ref: refDecorator,\n    shallow: shallowDecorator,\n    deep: deepDecorator,\n    struct: refStructDecorator\n};\nconst observable = createObservable;\n// weird trick to keep our typings nicely with our funcs, and still extend the observable function\nObject.keys(observableFactories).forEach(name => (observable[name] = observableFactories[name]));\nfunction incorrectlyUsedAsDecorator(methodName) {\n    fail(\n    // process.env.NODE_ENV !== \"production\" &&\n    `Expected one or two arguments to observable.${methodName}. Did you accidentally try to use observable.${methodName} as decorator?`);\n}\n\nconst computedDecorator = createPropDecorator(false, (instance, propertyName, descriptor, decoratorTarget, decoratorArgs) => {\n    const { get, set } = descriptor; // initialValue is the descriptor for get / set props\n    // Optimization: faster on decorator target or instance? Assuming target\n    // Optimization: find out if declaring on instance isn't just faster. (also makes the property descriptor simpler). But, more memory usage..\n    // Forcing instance now, fixes hot reloadig issues on React Native:\n    const options = decoratorArgs[0] || {};\n    asObservableObject(instance).addComputedProp(instance, propertyName, Object.assign({ get,\n        set, context: instance }, options));\n});\nconst computedStructDecorator = computedDecorator({ equals: comparer.structural });\n/**\n * Decorator for class properties: @computed get value() { return expr; }.\n * For legacy purposes also invokable as ES5 observable created: `computed(() => expr)`;\n */\nconst computed = function computed(arg1, arg2, arg3) {\n    if (typeof arg2 === \"string\") {\n        // @computed\n        return computedDecorator.apply(null, arguments);\n    }\n    if (arg1 !== null && typeof arg1 === \"object\" && arguments.length === 1) {\n        // @computed({ options })\n        return computedDecorator.apply(null, arguments);\n    }\n    // computed(expr, options?)\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(typeof arg1 === \"function\", \"First argument to `computed` should be an expression.\");\n        invariant(arguments.length < 3, \"Computed takes one or two arguments if used as function\");\n    }\n    const opts = typeof arg2 === \"object\" ? arg2 : {};\n    opts.get = arg1;\n    opts.set = typeof arg2 === \"function\" ? arg2 : opts.set;\n    opts.name = opts.name || arg1.name || \"\"; /* for generated name */\n    return new ComputedValue(opts);\n};\ncomputed.struct = computedStructDecorator;\n\nvar IDerivationState;\n(function (IDerivationState) {\n    // before being run or (outside batch and not being observed)\n    // at this point derivation is not holding any data about dependency tree\n    IDerivationState[IDerivationState[\"NOT_TRACKING\"] = -1] = \"NOT_TRACKING\";\n    // no shallow dependency changed since last computation\n    // won't recalculate derivation\n    // this is what makes mobx fast\n    IDerivationState[IDerivationState[\"UP_TO_DATE\"] = 0] = \"UP_TO_DATE\";\n    // some deep dependency changed, but don't know if shallow dependency changed\n    // will require to check first if UP_TO_DATE or POSSIBLY_STALE\n    // currently only ComputedValue will propagate POSSIBLY_STALE\n    //\n    // having this state is second big optimization:\n    // don't have to recompute on every dependency change, but only when it's needed\n    IDerivationState[IDerivationState[\"POSSIBLY_STALE\"] = 1] = \"POSSIBLY_STALE\";\n    // A shallow dependency has changed since last computation and the derivation\n    // will need to recompute when it's needed next.\n    IDerivationState[IDerivationState[\"STALE\"] = 2] = \"STALE\";\n})(IDerivationState || (IDerivationState = {}));\nvar TraceMode;\n(function (TraceMode) {\n    TraceMode[TraceMode[\"NONE\"] = 0] = \"NONE\";\n    TraceMode[TraceMode[\"LOG\"] = 1] = \"LOG\";\n    TraceMode[TraceMode[\"BREAK\"] = 2] = \"BREAK\";\n})(TraceMode || (TraceMode = {}));\nclass CaughtException {\n    constructor(cause) {\n        this.cause = cause;\n        // Empty\n    }\n}\nfunction isCaughtException(e) {\n    return e instanceof CaughtException;\n}\n/**\n * Finds out whether any dependency of the derivation has actually changed.\n * If dependenciesState is 1 then it will recalculate dependencies,\n * if any dependency changed it will propagate it by changing dependenciesState to 2.\n *\n * By iterating over the dependencies in the same order that they were reported and\n * stopping on the first change, all the recalculations are only called for ComputedValues\n * that will be tracked by derivation. That is because we assume that if the first x\n * dependencies of the derivation doesn't change then the derivation should run the same way\n * up until accessing x-th dependency.\n */\nfunction shouldCompute(derivation) {\n    switch (derivation.dependenciesState) {\n        case IDerivationState.UP_TO_DATE:\n            return false;\n        case IDerivationState.NOT_TRACKING:\n        case IDerivationState.STALE:\n            return true;\n        case IDerivationState.POSSIBLY_STALE: {\n            const prevUntracked = untrackedStart(); // no need for those computeds to be reported, they will be picked up in trackDerivedFunction.\n            const obs = derivation.observing, l = obs.length;\n            for (let i = 0; i < l; i++) {\n                const obj = obs[i];\n                if (isComputedValue(obj)) {\n                    if (globalState.disableErrorBoundaries) {\n                        obj.get();\n                    }\n                    else {\n                        try {\n                            obj.get();\n                        }\n                        catch (e) {\n                            // we are not interested in the value *or* exception at this moment, but if there is one, notify all\n                            untrackedEnd(prevUntracked);\n                            return true;\n                        }\n                    }\n                    // if ComputedValue `obj` actually changed it will be computed and propagated to its observers.\n                    // and `derivation` is an observer of `obj`\n                    // invariantShouldCompute(derivation)\n                    if (derivation.dependenciesState === IDerivationState.STALE) {\n                        untrackedEnd(prevUntracked);\n                        return true;\n                    }\n                }\n            }\n            changeDependenciesStateTo0(derivation);\n            untrackedEnd(prevUntracked);\n            return false;\n        }\n    }\n}\n// function invariantShouldCompute(derivation: IDerivation) {\n//     const newDepState = (derivation as any).dependenciesState\n//     if (\n//         process.env.NODE_ENV === \"production\" &&\n//         (newDepState === IDerivationState.POSSIBLY_STALE ||\n//             newDepState === IDerivationState.NOT_TRACKING)\n//     )\n//         fail(\"Illegal dependency state\")\n// }\nfunction isComputingDerivation() {\n    return globalState.trackingDerivation !== null; // filter out actions inside computations\n}\nfunction checkIfStateModificationsAreAllowed(atom) {\n    const hasObservers = atom.observers.size > 0;\n    // Should never be possible to change an observed observable from inside computed, see #798\n    if (globalState.computationDepth > 0 && hasObservers)\n        fail(process.env.NODE_ENV !== \"production\" &&\n            `Computed values are not allowed to cause side effects by changing observables that are already being observed. Tried to modify: ${atom.name}`);\n    // Should not be possible to change observed state outside strict mode, except during initialization, see #563\n    if (!globalState.allowStateChanges && (hasObservers || globalState.enforceActions === \"strict\"))\n        fail(process.env.NODE_ENV !== \"production\" &&\n            (globalState.enforceActions\n                ? \"Since strict-mode is enabled, changing observed observable values outside actions is not allowed. Please wrap the code in an `action` if this change is intended. Tried to modify: \"\n                : \"Side effects like changing state are not allowed at this point. Are you trying to modify state from, for example, the render function of a React component? Tried to modify: \") +\n                atom.name);\n}\nfunction checkIfStateReadsAreAllowed(observable) {\n    if (process.env.NODE_ENV !== \"production\" &&\n        !globalState.allowStateReads &&\n        globalState.observableRequiresReaction) {\n        console.warn(`[mobx] Observable ${observable.name} being read outside a reactive context`);\n    }\n}\n/**\n * Executes the provided function `f` and tracks which observables are being accessed.\n * The tracking information is stored on the `derivation` object and the derivation is registered\n * as observer of any of the accessed observables.\n */\nfunction trackDerivedFunction(derivation, f, context) {\n    const prevAllowStateReads = allowStateReadsStart(true);\n    // pre allocate array allocation + room for variation in deps\n    // array will be trimmed by bindDependencies\n    changeDependenciesStateTo0(derivation);\n    derivation.newObserving = new Array(derivation.observing.length + 100);\n    derivation.unboundDepsCount = 0;\n    derivation.runId = ++globalState.runId;\n    const prevTracking = globalState.trackingDerivation;\n    globalState.trackingDerivation = derivation;\n    let result;\n    if (globalState.disableErrorBoundaries === true) {\n        result = f.call(context);\n    }\n    else {\n        try {\n            result = f.call(context);\n        }\n        catch (e) {\n            result = new CaughtException(e);\n        }\n    }\n    globalState.trackingDerivation = prevTracking;\n    bindDependencies(derivation);\n    warnAboutDerivationWithoutDependencies(derivation);\n    allowStateReadsEnd(prevAllowStateReads);\n    return result;\n}\nfunction warnAboutDerivationWithoutDependencies(derivation) {\n    if (process.env.NODE_ENV === \"production\")\n        return;\n    if (derivation.observing.length !== 0)\n        return;\n    if (globalState.reactionRequiresObservable || derivation.requiresObservable) {\n        console.warn(`[mobx] Derivation ${derivation.name} is created/updated without reading any observable value`);\n    }\n}\n/**\n * diffs newObserving with observing.\n * update observing to be newObserving with unique observables\n * notify observers that become observed/unobserved\n */\nfunction bindDependencies(derivation) {\n    // invariant(derivation.dependenciesState !== IDerivationState.NOT_TRACKING, \"INTERNAL ERROR bindDependencies expects derivation.dependenciesState !== -1\");\n    const prevObserving = derivation.observing;\n    const observing = (derivation.observing = derivation.newObserving);\n    let lowestNewObservingDerivationState = IDerivationState.UP_TO_DATE;\n    // Go through all new observables and check diffValue: (this list can contain duplicates):\n    //   0: first occurrence, change to 1 and keep it\n    //   1: extra occurrence, drop it\n    let i0 = 0, l = derivation.unboundDepsCount;\n    for (let i = 0; i < l; i++) {\n        const dep = observing[i];\n        if (dep.diffValue === 0) {\n            dep.diffValue = 1;\n            if (i0 !== i)\n                observing[i0] = dep;\n            i0++;\n        }\n        // Upcast is 'safe' here, because if dep is IObservable, `dependenciesState` will be undefined,\n        // not hitting the condition\n        if (dep.dependenciesState > lowestNewObservingDerivationState) {\n            lowestNewObservingDerivationState = dep.dependenciesState;\n        }\n    }\n    observing.length = i0;\n    derivation.newObserving = null; // newObserving shouldn't be needed outside tracking (statement moved down to work around FF bug, see #614)\n    // Go through all old observables and check diffValue: (it is unique after last bindDependencies)\n    //   0: it's not in new observables, unobserve it\n    //   1: it keeps being observed, don't want to notify it. change to 0\n    l = prevObserving.length;\n    while (l--) {\n        const dep = prevObserving[l];\n        if (dep.diffValue === 0) {\n            removeObserver(dep, derivation);\n        }\n        dep.diffValue = 0;\n    }\n    // Go through all new observables and check diffValue: (now it should be unique)\n    //   0: it was set to 0 in last loop. don't need to do anything.\n    //   1: it wasn't observed, let's observe it. set back to 0\n    while (i0--) {\n        const dep = observing[i0];\n        if (dep.diffValue === 1) {\n            dep.diffValue = 0;\n            addObserver(dep, derivation);\n        }\n    }\n    // Some new observed derivations may become stale during this derivation computation\n    // so they have had no chance to propagate staleness (#916)\n    if (lowestNewObservingDerivationState !== IDerivationState.UP_TO_DATE) {\n        derivation.dependenciesState = lowestNewObservingDerivationState;\n        derivation.onBecomeStale();\n    }\n}\nfunction clearObserving(derivation) {\n    // invariant(globalState.inBatch > 0, \"INTERNAL ERROR clearObserving should be called only inside batch\");\n    const obs = derivation.observing;\n    derivation.observing = [];\n    let i = obs.length;\n    while (i--)\n        removeObserver(obs[i], derivation);\n    derivation.dependenciesState = IDerivationState.NOT_TRACKING;\n}\nfunction untracked(action) {\n    const prev = untrackedStart();\n    try {\n        return action();\n    }\n    finally {\n        untrackedEnd(prev);\n    }\n}\nfunction untrackedStart() {\n    const prev = globalState.trackingDerivation;\n    globalState.trackingDerivation = null;\n    return prev;\n}\nfunction untrackedEnd(prev) {\n    globalState.trackingDerivation = prev;\n}\nfunction allowStateReadsStart(allowStateReads) {\n    const prev = globalState.allowStateReads;\n    globalState.allowStateReads = allowStateReads;\n    return prev;\n}\nfunction allowStateReadsEnd(prev) {\n    globalState.allowStateReads = prev;\n}\n/**\n * needed to keep `lowestObserverState` correct. when changing from (2 or 1) to 0\n *\n */\nfunction changeDependenciesStateTo0(derivation) {\n    if (derivation.dependenciesState === IDerivationState.UP_TO_DATE)\n        return;\n    derivation.dependenciesState = IDerivationState.UP_TO_DATE;\n    const obs = derivation.observing;\n    let i = obs.length;\n    while (i--)\n        obs[i].lowestObserverState = IDerivationState.UP_TO_DATE;\n}\n\n// we don't use globalState for these in order to avoid possible issues with multiple\n// mobx versions\nlet currentActionId = 0;\nlet nextActionId = 1;\nfunction createAction(actionName, fn, ref) {\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(typeof fn === \"function\", \"`action` can only be invoked on functions\");\n        if (typeof actionName !== \"string\" || !actionName)\n            fail(`actions should have valid names, got: '${actionName}'`);\n    }\n    const res = function () {\n        return executeAction(actionName, fn, ref || this, arguments);\n    };\n    res.isMobxAction = true;\n    return res;\n}\nfunction executeAction(actionName, fn, scope, args) {\n    const runInfo = _startAction(actionName, scope, args);\n    try {\n        return fn.apply(scope, args);\n    }\n    catch (err) {\n        runInfo.error = err;\n        throw err;\n    }\n    finally {\n        _endAction(runInfo);\n    }\n}\nfunction _startAction(actionName, scope, args) {\n    const notifySpy = isSpyEnabled() && !!actionName;\n    let startTime = 0;\n    if (notifySpy && process.env.NODE_ENV !== \"production\") {\n        startTime = Date.now();\n        const l = (args && args.length) || 0;\n        const flattendArgs = new Array(l);\n        if (l > 0)\n            for (let i = 0; i < l; i++)\n                flattendArgs[i] = args[i];\n        spyReportStart({\n            type: \"action\",\n            name: actionName,\n            object: scope,\n            arguments: flattendArgs\n        });\n    }\n    const prevDerivation = untrackedStart();\n    startBatch();\n    const prevAllowStateChanges = allowStateChangesStart(true);\n    const prevAllowStateReads = allowStateReadsStart(true);\n    const runInfo = {\n        prevDerivation,\n        prevAllowStateChanges,\n        prevAllowStateReads,\n        notifySpy,\n        startTime,\n        actionId: nextActionId++,\n        parentActionId: currentActionId\n    };\n    currentActionId = runInfo.actionId;\n    return runInfo;\n}\nfunction _endAction(runInfo) {\n    if (currentActionId !== runInfo.actionId) {\n        fail(\"invalid action stack. did you forget to finish an action?\");\n    }\n    currentActionId = runInfo.parentActionId;\n    if (runInfo.error !== undefined) {\n        globalState.suppressReactionErrors = true;\n    }\n    allowStateChangesEnd(runInfo.prevAllowStateChanges);\n    allowStateReadsEnd(runInfo.prevAllowStateReads);\n    endBatch();\n    untrackedEnd(runInfo.prevDerivation);\n    if (runInfo.notifySpy && process.env.NODE_ENV !== \"production\") {\n        spyReportEnd({ time: Date.now() - runInfo.startTime });\n    }\n    globalState.suppressReactionErrors = false;\n}\nfunction allowStateChanges(allowStateChanges, func) {\n    const prev = allowStateChangesStart(allowStateChanges);\n    let res;\n    try {\n        res = func();\n    }\n    finally {\n        allowStateChangesEnd(prev);\n    }\n    return res;\n}\nfunction allowStateChangesStart(allowStateChanges) {\n    const prev = globalState.allowStateChanges;\n    globalState.allowStateChanges = allowStateChanges;\n    return prev;\n}\nfunction allowStateChangesEnd(prev) {\n    globalState.allowStateChanges = prev;\n}\nfunction allowStateChangesInsideComputed(func) {\n    const prev = globalState.computationDepth;\n    globalState.computationDepth = 0;\n    let res;\n    try {\n        res = func();\n    }\n    finally {\n        globalState.computationDepth = prev;\n    }\n    return res;\n}\n\nclass ObservableValue extends Atom {\n    constructor(value, enhancer, name = \"ObservableValue@\" + getNextId(), notifySpy = true, equals = comparer.default) {\n        super(name);\n        this.enhancer = enhancer;\n        this.name = name;\n        this.equals = equals;\n        this.hasUnreportedChange = false;\n        this.value = enhancer(value, undefined, name);\n        if (notifySpy && isSpyEnabled() && process.env.NODE_ENV !== \"production\") {\n            // only notify spy if this is a stand-alone observable\n            spyReport({ type: \"create\", name: this.name, newValue: \"\" + this.value });\n        }\n    }\n    dehanceValue(value) {\n        if (this.dehancer !== undefined)\n            return this.dehancer(value);\n        return value;\n    }\n    set(newValue) {\n        const oldValue = this.value;\n        newValue = this.prepareNewValue(newValue);\n        if (newValue !== globalState.UNCHANGED) {\n            const notifySpy = isSpyEnabled();\n            if (notifySpy && process.env.NODE_ENV !== \"production\") {\n                spyReportStart({\n                    type: \"update\",\n                    name: this.name,\n                    newValue,\n                    oldValue\n                });\n            }\n            this.setNewValue(newValue);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n        }\n    }\n    prepareNewValue(newValue) {\n        checkIfStateModificationsAreAllowed(this);\n        if (hasInterceptors(this)) {\n            const change = interceptChange(this, {\n                object: this,\n                type: \"update\",\n                newValue\n            });\n            if (!change)\n                return globalState.UNCHANGED;\n            newValue = change.newValue;\n        }\n        // apply modifier\n        newValue = this.enhancer(newValue, this.value, this.name);\n        return this.equals(this.value, newValue) ? globalState.UNCHANGED : newValue;\n    }\n    setNewValue(newValue) {\n        const oldValue = this.value;\n        this.value = newValue;\n        this.reportChanged();\n        if (hasListeners(this)) {\n            notifyListeners(this, {\n                type: \"update\",\n                object: this,\n                newValue,\n                oldValue\n            });\n        }\n    }\n    get() {\n        this.reportObserved();\n        return this.dehanceValue(this.value);\n    }\n    intercept(handler) {\n        return registerInterceptor(this, handler);\n    }\n    observe(listener, fireImmediately) {\n        if (fireImmediately)\n            listener({\n                object: this,\n                type: \"update\",\n                newValue: this.value,\n                oldValue: undefined\n            });\n        return registerListener(this, listener);\n    }\n    toJSON() {\n        return this.get();\n    }\n    toString() {\n        return `${this.name}[${this.value}]`;\n    }\n    valueOf() {\n        return toPrimitive(this.get());\n    }\n    [Symbol.toPrimitive]() {\n        return this.valueOf();\n    }\n}\nconst isObservableValue = createInstanceofPredicate(\"ObservableValue\", ObservableValue);\n\n/**\n * A node in the state dependency root that observes other nodes, and can be observed itself.\n *\n * ComputedValue will remember the result of the computation for the duration of the batch, or\n * while being observed.\n *\n * During this time it will recompute only when one of its direct dependencies changed,\n * but only when it is being accessed with `ComputedValue.get()`.\n *\n * Implementation description:\n * 1. First time it's being accessed it will compute and remember result\n *    give back remembered result until 2. happens\n * 2. First time any deep dependency change, propagate POSSIBLY_STALE to all observers, wait for 3.\n * 3. When it's being accessed, recompute if any shallow dependency changed.\n *    if result changed: propagate STALE to all observers, that were POSSIBLY_STALE from the last step.\n *    go to step 2. either way\n *\n * If at any point it's outside batch and it isn't observed: reset everything and go to 1.\n */\nclass ComputedValue {\n    /**\n     * Create a new computed value based on a function expression.\n     *\n     * The `name` property is for debug purposes only.\n     *\n     * The `equals` property specifies the comparer function to use to determine if a newly produced\n     * value differs from the previous value. Two comparers are provided in the library; `defaultComparer`\n     * compares based on identity comparison (===), and `structualComparer` deeply compares the structure.\n     * Structural comparison can be convenient if you always produce a new aggregated object and\n     * don't want to notify observers if it is structurally the same.\n     * This is useful for working with vectors, mouse coordinates etc.\n     */\n    constructor(options) {\n        this.dependenciesState = IDerivationState.NOT_TRACKING;\n        this.observing = []; // nodes we are looking at. Our value depends on these nodes\n        this.newObserving = null; // during tracking it's an array with new observed observers\n        this.isBeingObserved = false;\n        this.isPendingUnobservation = false;\n        this.observers = new Set();\n        this.diffValue = 0;\n        this.runId = 0;\n        this.lastAccessedBy = 0;\n        this.lowestObserverState = IDerivationState.UP_TO_DATE;\n        this.unboundDepsCount = 0;\n        this.__mapid = \"#\" + getNextId();\n        this.value = new CaughtException(null);\n        this.isComputing = false; // to check for cycles\n        this.isRunningSetter = false;\n        this.isTracing = TraceMode.NONE;\n        if (process.env.NODE_ENV !== \"production\" && !options.get)\n            throw \"[mobx] missing option for computed: get\";\n        this.derivation = options.get;\n        this.name = options.name || \"ComputedValue@\" + getNextId();\n        if (options.set)\n            this.setter = createAction(this.name + \"-setter\", options.set);\n        this.equals =\n            options.equals ||\n                (options.compareStructural || options.struct\n                    ? comparer.structural\n                    : comparer.default);\n        this.scope = options.context;\n        this.requiresReaction = !!options.requiresReaction;\n        this.keepAlive = !!options.keepAlive;\n    }\n    onBecomeStale() {\n        propagateMaybeChanged(this);\n    }\n    onBecomeObserved() {\n        if (this.onBecomeObservedListeners) {\n            this.onBecomeObservedListeners.forEach(listener => listener());\n        }\n    }\n    onBecomeUnobserved() {\n        if (this.onBecomeUnobservedListeners) {\n            this.onBecomeUnobservedListeners.forEach(listener => listener());\n        }\n    }\n    /**\n     * Returns the current value of this computed value.\n     * Will evaluate its computation first if needed.\n     */\n    get() {\n        if (this.isComputing)\n            fail(`Cycle detected in computation ${this.name}: ${this.derivation}`);\n        if (globalState.inBatch === 0 && this.observers.size === 0 && !this.keepAlive) {\n            if (shouldCompute(this)) {\n                this.warnAboutUntrackedRead();\n                startBatch(); // See perf test 'computed memoization'\n                this.value = this.computeValue(false);\n                endBatch();\n            }\n        }\n        else {\n            reportObserved(this);\n            if (shouldCompute(this))\n                if (this.trackAndCompute())\n                    propagateChangeConfirmed(this);\n        }\n        const result = this.value;\n        if (isCaughtException(result))\n            throw result.cause;\n        return result;\n    }\n    peek() {\n        const res = this.computeValue(false);\n        if (isCaughtException(res))\n            throw res.cause;\n        return res;\n    }\n    set(value) {\n        if (this.setter) {\n            invariant(!this.isRunningSetter, `The setter of computed value '${this.name}' is trying to update itself. Did you intend to update an _observable_ value, instead of the computed property?`);\n            this.isRunningSetter = true;\n            try {\n                this.setter.call(this.scope, value);\n            }\n            finally {\n                this.isRunningSetter = false;\n            }\n        }\n        else\n            invariant(false, process.env.NODE_ENV !== \"production\" &&\n                `[ComputedValue '${this.name}'] It is not possible to assign a new value to a computed value.`);\n    }\n    trackAndCompute() {\n        if (isSpyEnabled() && process.env.NODE_ENV !== \"production\") {\n            spyReport({\n                object: this.scope,\n                type: \"compute\",\n                name: this.name\n            });\n        }\n        const oldValue = this.value;\n        const wasSuspended = \n        /* see #1208 */ this.dependenciesState === IDerivationState.NOT_TRACKING;\n        const newValue = this.computeValue(true);\n        const changed = wasSuspended ||\n            isCaughtException(oldValue) ||\n            isCaughtException(newValue) ||\n            !this.equals(oldValue, newValue);\n        if (changed) {\n            this.value = newValue;\n        }\n        return changed;\n    }\n    computeValue(track) {\n        this.isComputing = true;\n        globalState.computationDepth++;\n        let res;\n        if (track) {\n            res = trackDerivedFunction(this, this.derivation, this.scope);\n        }\n        else {\n            if (globalState.disableErrorBoundaries === true) {\n                res = this.derivation.call(this.scope);\n            }\n            else {\n                try {\n                    res = this.derivation.call(this.scope);\n                }\n                catch (e) {\n                    res = new CaughtException(e);\n                }\n            }\n        }\n        globalState.computationDepth--;\n        this.isComputing = false;\n        return res;\n    }\n    suspend() {\n        if (!this.keepAlive) {\n            clearObserving(this);\n            this.value = undefined; // don't hold on to computed value!\n        }\n    }\n    observe(listener, fireImmediately) {\n        let firstTime = true;\n        let prevValue = undefined;\n        return autorun(() => {\n            let newValue = this.get();\n            if (!firstTime || fireImmediately) {\n                const prevU = untrackedStart();\n                listener({\n                    type: \"update\",\n                    object: this,\n                    newValue,\n                    oldValue: prevValue\n                });\n                untrackedEnd(prevU);\n            }\n            firstTime = false;\n            prevValue = newValue;\n        });\n    }\n    warnAboutUntrackedRead() {\n        if (process.env.NODE_ENV === \"production\")\n            return;\n        if (this.requiresReaction === true) {\n            fail(`[mobx] Computed value ${this.name} is read outside a reactive context`);\n        }\n        if (this.isTracing !== TraceMode.NONE) {\n            console.log(`[mobx.trace] '${this.name}' is being read outside a reactive context. Doing a full recompute`);\n        }\n        if (globalState.computedRequiresReaction) {\n            console.warn(`[mobx] Computed value ${this.name} is being read outside a reactive context. Doing a full recompute`);\n        }\n    }\n    toJSON() {\n        return this.get();\n    }\n    toString() {\n        return `${this.name}[${this.derivation.toString()}]`;\n    }\n    valueOf() {\n        return toPrimitive(this.get());\n    }\n    [Symbol.toPrimitive]() {\n        return this.valueOf();\n    }\n}\nconst isComputedValue = createInstanceofPredicate(\"ComputedValue\", ComputedValue);\n\n/**\n * These values will persist if global state is reset\n */\nconst persistentKeys = [\n    \"mobxGuid\",\n    \"spyListeners\",\n    \"enforceActions\",\n    \"computedRequiresReaction\",\n    \"reactionRequiresObservable\",\n    \"observableRequiresReaction\",\n    \"allowStateReads\",\n    \"disableErrorBoundaries\",\n    \"runId\",\n    \"UNCHANGED\"\n];\nclass MobXGlobals {\n    constructor() {\n        /**\n         * MobXGlobals version.\n         * MobX compatiblity with other versions loaded in memory as long as this version matches.\n         * It indicates that the global state still stores similar information\n         *\n         * N.B: this version is unrelated to the package version of MobX, and is only the version of the\n         * internal state storage of MobX, and can be the same across many different package versions\n         */\n        this.version = 5;\n        /**\n         * globally unique token to signal unchanged\n         */\n        this.UNCHANGED = {};\n        /**\n         * Currently running derivation\n         */\n        this.trackingDerivation = null;\n        /**\n         * Are we running a computation currently? (not a reaction)\n         */\n        this.computationDepth = 0;\n        /**\n         * Each time a derivation is tracked, it is assigned a unique run-id\n         */\n        this.runId = 0;\n        /**\n         * 'guid' for general purpose. Will be persisted amongst resets.\n         */\n        this.mobxGuid = 0;\n        /**\n         * Are we in a batch block? (and how many of them)\n         */\n        this.inBatch = 0;\n        /**\n         * Observables that don't have observers anymore, and are about to be\n         * suspended, unless somebody else accesses it in the same batch\n         *\n         * @type {IObservable[]}\n         */\n        this.pendingUnobservations = [];\n        /**\n         * List of scheduled, not yet executed, reactions.\n         */\n        this.pendingReactions = [];\n        /**\n         * Are we currently processing reactions?\n         */\n        this.isRunningReactions = false;\n        /**\n         * Is it allowed to change observables at this point?\n         * In general, MobX doesn't allow that when running computations and React.render.\n         * To ensure that those functions stay pure.\n         */\n        this.allowStateChanges = true;\n        /**\n         * Is it allowed to read observables at this point?\n         * Used to hold the state needed for `observableRequiresReaction`\n         */\n        this.allowStateReads = true;\n        /**\n         * If strict mode is enabled, state changes are by default not allowed\n         */\n        this.enforceActions = false;\n        /**\n         * Spy callbacks\n         */\n        this.spyListeners = [];\n        /**\n         * Globally attached error handlers that react specifically to errors in reactions\n         */\n        this.globalReactionErrorHandlers = [];\n        /**\n         * Warn if computed values are accessed outside a reactive context\n         */\n        this.computedRequiresReaction = false;\n        /**\n         * (Experimental)\n         * Warn if you try to create to derivation / reactive context without accessing any observable.\n         */\n        this.reactionRequiresObservable = false;\n        /**\n         * (Experimental)\n         * Warn if observables are accessed outside a reactive context\n         */\n        this.observableRequiresReaction = false;\n        /**\n         * Allows overwriting of computed properties, useful in tests but not prod as it can cause\n         * memory leaks. See https://github.com/mobxjs/mobx/issues/1867\n         */\n        this.computedConfigurable = false;\n        /*\n         * Don't catch and rethrow exceptions. This is useful for inspecting the state of\n         * the stack when an exception occurs while debugging.\n         */\n        this.disableErrorBoundaries = false;\n        /*\n         * If true, we are already handling an exception in an action. Any errors in reactions should be suppressed, as\n         * they are not the cause, see: https://github.com/mobxjs/mobx/issues/1836\n         */\n        this.suppressReactionErrors = false;\n    }\n}\nconst mockGlobal = {};\nfunction getGlobal() {\n    if (typeof window !== \"undefined\") {\n        return window;\n    }\n    if (typeof global !== \"undefined\") {\n        return global;\n    }\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    return mockGlobal;\n}\nlet canMergeGlobalState = true;\nlet isolateCalled = false;\nlet globalState = (function () {\n    const global = getGlobal();\n    if (global.__mobxInstanceCount > 0 && !global.__mobxGlobals)\n        canMergeGlobalState = false;\n    if (global.__mobxGlobals && global.__mobxGlobals.version !== new MobXGlobals().version)\n        canMergeGlobalState = false;\n    if (!canMergeGlobalState) {\n        setTimeout(() => {\n            if (!isolateCalled) {\n                fail(\"There are multiple, different versions of MobX active. Make sure MobX is loaded only once or use `configure({ isolateGlobalState: true })`\");\n            }\n        }, 1);\n        return new MobXGlobals();\n    }\n    else if (global.__mobxGlobals) {\n        global.__mobxInstanceCount += 1;\n        if (!global.__mobxGlobals.UNCHANGED)\n            global.__mobxGlobals.UNCHANGED = {}; // make merge backward compatible\n        return global.__mobxGlobals;\n    }\n    else {\n        global.__mobxInstanceCount = 1;\n        return (global.__mobxGlobals = new MobXGlobals());\n    }\n})();\nfunction isolateGlobalState() {\n    if (globalState.pendingReactions.length ||\n        globalState.inBatch ||\n        globalState.isRunningReactions)\n        fail(\"isolateGlobalState should be called before MobX is running any reactions\");\n    isolateCalled = true;\n    if (canMergeGlobalState) {\n        if (--getGlobal().__mobxInstanceCount === 0)\n            getGlobal().__mobxGlobals = undefined;\n        globalState = new MobXGlobals();\n    }\n}\nfunction getGlobalState() {\n    return globalState;\n}\n/**\n * For testing purposes only; this will break the internal state of existing observables,\n * but can be used to get back at a stable state after throwing errors\n */\nfunction resetGlobalState() {\n    const defaultGlobals = new MobXGlobals();\n    for (let key in defaultGlobals)\n        if (persistentKeys.indexOf(key) === -1)\n            globalState[key] = defaultGlobals[key];\n    globalState.allowStateChanges = !globalState.enforceActions;\n}\n\nfunction hasObservers(observable) {\n    return observable.observers && observable.observers.size > 0;\n}\nfunction getObservers(observable) {\n    return observable.observers;\n}\n// function invariantObservers(observable: IObservable) {\n//     const list = observable.observers\n//     const map = observable.observersIndexes\n//     const l = list.length\n//     for (let i = 0; i < l; i++) {\n//         const id = list[i].__mapid\n//         if (i) {\n//             invariant(map[id] === i, \"INTERNAL ERROR maps derivation.__mapid to index in list\") // for performance\n//         } else {\n//             invariant(!(id in map), \"INTERNAL ERROR observer on index 0 shouldn't be held in map.\") // for performance\n//         }\n//     }\n//     invariant(\n//         list.length === 0 || Object.keys(map).length === list.length - 1,\n//         \"INTERNAL ERROR there is no junk in map\"\n//     )\n// }\nfunction addObserver(observable, node) {\n    // invariant(node.dependenciesState !== -1, \"INTERNAL ERROR, can add only dependenciesState !== -1\");\n    // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR add already added node\");\n    // invariantObservers(observable);\n    observable.observers.add(node);\n    if (observable.lowestObserverState > node.dependenciesState)\n        observable.lowestObserverState = node.dependenciesState;\n    // invariantObservers(observable);\n    // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR didn't add node\");\n}\nfunction removeObserver(observable, node) {\n    // invariant(globalState.inBatch > 0, \"INTERNAL ERROR, remove should be called only inside batch\");\n    // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR remove already removed node\");\n    // invariantObservers(observable);\n    observable.observers.delete(node);\n    if (observable.observers.size === 0) {\n        // deleting last observer\n        queueForUnobservation(observable);\n    }\n    // invariantObservers(observable);\n    // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR remove already removed node2\");\n}\nfunction queueForUnobservation(observable) {\n    if (observable.isPendingUnobservation === false) {\n        // invariant(observable._observers.length === 0, \"INTERNAL ERROR, should only queue for unobservation unobserved observables\");\n        observable.isPendingUnobservation = true;\n        globalState.pendingUnobservations.push(observable);\n    }\n}\n/**\n * Batch starts a transaction, at least for purposes of memoizing ComputedValues when nothing else does.\n * During a batch `onBecomeUnobserved` will be called at most once per observable.\n * Avoids unnecessary recalculations.\n */\nfunction startBatch() {\n    globalState.inBatch++;\n}\nfunction endBatch() {\n    if (--globalState.inBatch === 0) {\n        runReactions();\n        // the batch is actually about to finish, all unobserving should happen here.\n        const list = globalState.pendingUnobservations;\n        for (let i = 0; i < list.length; i++) {\n            const observable = list[i];\n            observable.isPendingUnobservation = false;\n            if (observable.observers.size === 0) {\n                if (observable.isBeingObserved) {\n                    // if this observable had reactive observers, trigger the hooks\n                    observable.isBeingObserved = false;\n                    observable.onBecomeUnobserved();\n                }\n                if (observable instanceof ComputedValue) {\n                    // computed values are automatically teared down when the last observer leaves\n                    // this process happens recursively, this computed might be the last observabe of another, etc..\n                    observable.suspend();\n                }\n            }\n        }\n        globalState.pendingUnobservations = [];\n    }\n}\nfunction reportObserved(observable) {\n    checkIfStateReadsAreAllowed(observable);\n    const derivation = globalState.trackingDerivation;\n    if (derivation !== null) {\n        /**\n         * Simple optimization, give each derivation run an unique id (runId)\n         * Check if last time this observable was accessed the same runId is used\n         * if this is the case, the relation is already known\n         */\n        if (derivation.runId !== observable.lastAccessedBy) {\n            observable.lastAccessedBy = derivation.runId;\n            // Tried storing newObserving, or observing, or both as Set, but performance didn't come close...\n            derivation.newObserving[derivation.unboundDepsCount++] = observable;\n            if (!observable.isBeingObserved) {\n                observable.isBeingObserved = true;\n                observable.onBecomeObserved();\n            }\n        }\n        return true;\n    }\n    else if (observable.observers.size === 0 && globalState.inBatch > 0) {\n        queueForUnobservation(observable);\n    }\n    return false;\n}\n// function invariantLOS(observable: IObservable, msg: string) {\n//     // it's expensive so better not run it in produciton. but temporarily helpful for testing\n//     const min = getObservers(observable).reduce((a, b) => Math.min(a, b.dependenciesState), 2)\n//     if (min >= observable.lowestObserverState) return // <- the only assumption about `lowestObserverState`\n//     throw new Error(\n//         \"lowestObserverState is wrong for \" +\n//             msg +\n//             \" because \" +\n//             min +\n//             \" < \" +\n//             observable.lowestObserverState\n//     )\n// }\n/**\n * NOTE: current propagation mechanism will in case of self reruning autoruns behave unexpectedly\n * It will propagate changes to observers from previous run\n * It's hard or maybe impossible (with reasonable perf) to get it right with current approach\n * Hopefully self reruning autoruns aren't a feature people should depend on\n * Also most basic use cases should be ok\n */\n// Called by Atom when its value changes\nfunction propagateChanged(observable) {\n    // invariantLOS(observable, \"changed start\");\n    if (observable.lowestObserverState === IDerivationState.STALE)\n        return;\n    observable.lowestObserverState = IDerivationState.STALE;\n    // Ideally we use for..of here, but the downcompiled version is really slow...\n    observable.observers.forEach(d => {\n        if (d.dependenciesState === IDerivationState.UP_TO_DATE) {\n            if (d.isTracing !== TraceMode.NONE) {\n                logTraceInfo(d, observable);\n            }\n            d.onBecomeStale();\n        }\n        d.dependenciesState = IDerivationState.STALE;\n    });\n    // invariantLOS(observable, \"changed end\");\n}\n// Called by ComputedValue when it recalculate and its value changed\nfunction propagateChangeConfirmed(observable) {\n    // invariantLOS(observable, \"confirmed start\");\n    if (observable.lowestObserverState === IDerivationState.STALE)\n        return;\n    observable.lowestObserverState = IDerivationState.STALE;\n    observable.observers.forEach(d => {\n        if (d.dependenciesState === IDerivationState.POSSIBLY_STALE)\n            d.dependenciesState = IDerivationState.STALE;\n        else if (d.dependenciesState === IDerivationState.UP_TO_DATE // this happens during computing of `d`, just keep lowestObserverState up to date.\n        )\n            observable.lowestObserverState = IDerivationState.UP_TO_DATE;\n    });\n    // invariantLOS(observable, \"confirmed end\");\n}\n// Used by computed when its dependency changed, but we don't wan't to immediately recompute.\nfunction propagateMaybeChanged(observable) {\n    // invariantLOS(observable, \"maybe start\");\n    if (observable.lowestObserverState !== IDerivationState.UP_TO_DATE)\n        return;\n    observable.lowestObserverState = IDerivationState.POSSIBLY_STALE;\n    observable.observers.forEach(d => {\n        if (d.dependenciesState === IDerivationState.UP_TO_DATE) {\n            d.dependenciesState = IDerivationState.POSSIBLY_STALE;\n            if (d.isTracing !== TraceMode.NONE) {\n                logTraceInfo(d, observable);\n            }\n            d.onBecomeStale();\n        }\n    });\n    // invariantLOS(observable, \"maybe end\");\n}\nfunction logTraceInfo(derivation, observable) {\n    console.log(`[mobx.trace] '${derivation.name}' is invalidated due to a change in: '${observable.name}'`);\n    if (derivation.isTracing === TraceMode.BREAK) {\n        const lines = [];\n        printDepTree(getDependencyTree(derivation), lines, 1);\n        // prettier-ignore\n        new Function(`debugger;\n/*\nTracing '${derivation.name}'\n\nYou are entering this break point because derivation '${derivation.name}' is being traced and '${observable.name}' is now forcing it to update.\nJust follow the stacktrace you should now see in the devtools to see precisely what piece of your code is causing this update\nThe stackframe you are looking for is at least ~6-8 stack-frames up.\n\n${derivation instanceof ComputedValue ? derivation.derivation.toString().replace(/[*]\\//g, \"/\") : \"\"}\n\nThe dependencies for this derivation are:\n\n${lines.join(\"\\n\")}\n*/\n    `)();\n    }\n}\nfunction printDepTree(tree, lines, depth) {\n    if (lines.length >= 1000) {\n        lines.push(\"(and many more)\");\n        return;\n    }\n    lines.push(`${new Array(depth).join(\"\\t\")}${tree.name}`); // MWE: not the fastest, but the easiest way :)\n    if (tree.dependencies)\n        tree.dependencies.forEach(child => printDepTree(child, lines, depth + 1));\n}\n\nclass Reaction {\n    constructor(name = \"Reaction@\" + getNextId(), onInvalidate, errorHandler, requiresObservable = false) {\n        this.name = name;\n        this.onInvalidate = onInvalidate;\n        this.errorHandler = errorHandler;\n        this.requiresObservable = requiresObservable;\n        this.observing = []; // nodes we are looking at. Our value depends on these nodes\n        this.newObserving = [];\n        this.dependenciesState = IDerivationState.NOT_TRACKING;\n        this.diffValue = 0;\n        this.runId = 0;\n        this.unboundDepsCount = 0;\n        this.__mapid = \"#\" + getNextId();\n        this.isDisposed = false;\n        this._isScheduled = false;\n        this._isTrackPending = false;\n        this._isRunning = false;\n        this.isTracing = TraceMode.NONE;\n    }\n    onBecomeStale() {\n        this.schedule();\n    }\n    schedule() {\n        if (!this._isScheduled) {\n            this._isScheduled = true;\n            globalState.pendingReactions.push(this);\n            runReactions();\n        }\n    }\n    isScheduled() {\n        return this._isScheduled;\n    }\n    /**\n     * internal, use schedule() if you intend to kick off a reaction\n     */\n    runReaction() {\n        if (!this.isDisposed) {\n            startBatch();\n            this._isScheduled = false;\n            if (shouldCompute(this)) {\n                this._isTrackPending = true;\n                try {\n                    this.onInvalidate();\n                    if (this._isTrackPending &&\n                        isSpyEnabled() &&\n                        process.env.NODE_ENV !== \"production\") {\n                        // onInvalidate didn't trigger track right away..\n                        spyReport({\n                            name: this.name,\n                            type: \"scheduled-reaction\"\n                        });\n                    }\n                }\n                catch (e) {\n                    this.reportExceptionInDerivation(e);\n                }\n            }\n            endBatch();\n        }\n    }\n    track(fn) {\n        if (this.isDisposed) {\n            return;\n            // console.warn(\"Reaction already disposed\") // Note: Not a warning / error in mobx 4 either\n        }\n        startBatch();\n        const notify = isSpyEnabled();\n        let startTime;\n        if (notify && process.env.NODE_ENV !== \"production\") {\n            startTime = Date.now();\n            spyReportStart({\n                name: this.name,\n                type: \"reaction\"\n            });\n        }\n        this._isRunning = true;\n        const result = trackDerivedFunction(this, fn, undefined);\n        this._isRunning = false;\n        this._isTrackPending = false;\n        if (this.isDisposed) {\n            // disposed during last run. Clean up everything that was bound after the dispose call.\n            clearObserving(this);\n        }\n        if (isCaughtException(result))\n            this.reportExceptionInDerivation(result.cause);\n        if (notify && process.env.NODE_ENV !== \"production\") {\n            spyReportEnd({\n                time: Date.now() - startTime\n            });\n        }\n        endBatch();\n    }\n    reportExceptionInDerivation(error) {\n        if (this.errorHandler) {\n            this.errorHandler(error, this);\n            return;\n        }\n        if (globalState.disableErrorBoundaries)\n            throw error;\n        const message = `[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '${this}'`;\n        if (globalState.suppressReactionErrors) {\n            console.warn(`[mobx] (error in reaction '${this.name}' suppressed, fix error of causing action below)`); // prettier-ignore\n        }\n        else {\n            console.error(message, error);\n            /** If debugging brought you here, please, read the above message :-). Tnx! */\n        }\n        if (isSpyEnabled()) {\n            spyReport({\n                type: \"error\",\n                name: this.name,\n                message,\n                error: \"\" + error\n            });\n        }\n        globalState.globalReactionErrorHandlers.forEach(f => f(error, this));\n    }\n    dispose() {\n        if (!this.isDisposed) {\n            this.isDisposed = true;\n            if (!this._isRunning) {\n                // if disposed while running, clean up later. Maybe not optimal, but rare case\n                startBatch();\n                clearObserving(this);\n                endBatch();\n            }\n        }\n    }\n    getDisposer() {\n        const r = this.dispose.bind(this);\n        r[$mobx] = this;\n        return r;\n    }\n    toString() {\n        return `Reaction[${this.name}]`;\n    }\n    trace(enterBreakPoint = false) {\n        trace(this, enterBreakPoint);\n    }\n}\nfunction onReactionError(handler) {\n    globalState.globalReactionErrorHandlers.push(handler);\n    return () => {\n        const idx = globalState.globalReactionErrorHandlers.indexOf(handler);\n        if (idx >= 0)\n            globalState.globalReactionErrorHandlers.splice(idx, 1);\n    };\n}\n/**\n * Magic number alert!\n * Defines within how many times a reaction is allowed to re-trigger itself\n * until it is assumed that this is gonna be a never ending loop...\n */\nconst MAX_REACTION_ITERATIONS = 100;\nlet reactionScheduler = f => f();\nfunction runReactions() {\n    // Trampolining, if runReactions are already running, new reactions will be picked up\n    if (globalState.inBatch > 0 || globalState.isRunningReactions)\n        return;\n    reactionScheduler(runReactionsHelper);\n}\nfunction runReactionsHelper() {\n    globalState.isRunningReactions = true;\n    const allReactions = globalState.pendingReactions;\n    let iterations = 0;\n    // While running reactions, new reactions might be triggered.\n    // Hence we work with two variables and check whether\n    // we converge to no remaining reactions after a while.\n    while (allReactions.length > 0) {\n        if (++iterations === MAX_REACTION_ITERATIONS) {\n            console.error(`Reaction doesn't converge to a stable state after ${MAX_REACTION_ITERATIONS} iterations.` +\n                ` Probably there is a cycle in the reactive function: ${allReactions[0]}`);\n            allReactions.splice(0); // clear reactions\n        }\n        let remainingReactions = allReactions.splice(0);\n        for (let i = 0, l = remainingReactions.length; i < l; i++)\n            remainingReactions[i].runReaction();\n    }\n    globalState.isRunningReactions = false;\n}\nconst isReaction = createInstanceofPredicate(\"Reaction\", Reaction);\nfunction setReactionScheduler(fn) {\n    const baseScheduler = reactionScheduler;\n    reactionScheduler = f => fn(() => baseScheduler(f));\n}\n\nfunction isSpyEnabled() {\n    return process.env.NODE_ENV !== \"production\" && !!globalState.spyListeners.length;\n}\nfunction spyReport(event) {\n    if (process.env.NODE_ENV === \"production\")\n        return; // dead code elimination can do the rest\n    if (!globalState.spyListeners.length)\n        return;\n    const listeners = globalState.spyListeners;\n    for (let i = 0, l = listeners.length; i < l; i++)\n        listeners[i](event);\n}\nfunction spyReportStart(event) {\n    if (process.env.NODE_ENV === \"production\")\n        return;\n    const change = Object.assign(Object.assign({}, event), { spyReportStart: true });\n    spyReport(change);\n}\nconst END_EVENT = { spyReportEnd: true };\nfunction spyReportEnd(change) {\n    if (process.env.NODE_ENV === \"production\")\n        return;\n    if (change)\n        spyReport(Object.assign(Object.assign({}, change), { spyReportEnd: true }));\n    else\n        spyReport(END_EVENT);\n}\nfunction spy(listener) {\n    if (process.env.NODE_ENV === \"production\") {\n        console.warn(`[mobx.spy] Is a no-op in production builds`);\n        return function () { };\n    }\n    else {\n        globalState.spyListeners.push(listener);\n        return once(() => {\n            globalState.spyListeners = globalState.spyListeners.filter(l => l !== listener);\n        });\n    }\n}\n\nfunction dontReassignFields() {\n    fail(process.env.NODE_ENV !== \"production\" && \"@action fields are not reassignable\");\n}\nfunction namedActionDecorator(name) {\n    return function (target, prop, descriptor) {\n        if (descriptor) {\n            if (process.env.NODE_ENV !== \"production\" && descriptor.get !== undefined) {\n                return fail(\"@action cannot be used with getters\");\n            }\n            // babel / typescript\n            // @action method() { }\n            if (descriptor.value) {\n                // typescript\n                return {\n                    value: createAction(name, descriptor.value),\n                    enumerable: false,\n                    configurable: true,\n                    writable: true // for typescript, this must be writable, otherwise it cannot inherit :/ (see inheritable actions test)\n                };\n            }\n            // babel only: @action method = () => {}\n            const { initializer } = descriptor;\n            return {\n                enumerable: false,\n                configurable: true,\n                writable: true,\n                initializer() {\n                    // N.B: we can't immediately invoke initializer; this would be wrong\n                    return createAction(name, initializer.call(this));\n                }\n            };\n        }\n        // bound instance methods\n        return actionFieldDecorator(name).apply(this, arguments);\n    };\n}\nfunction actionFieldDecorator(name) {\n    // Simple property that writes on first invocation to the current instance\n    return function (target, prop, descriptor) {\n        Object.defineProperty(target, prop, {\n            configurable: true,\n            enumerable: false,\n            get() {\n                return undefined;\n            },\n            set(value) {\n                addHiddenProp(this, prop, action(name, value));\n            }\n        });\n    };\n}\nfunction boundActionDecorator(target, propertyName, descriptor, applyToInstance) {\n    if (applyToInstance === true) {\n        defineBoundAction(target, propertyName, descriptor.value);\n        return null;\n    }\n    if (descriptor) {\n        // if (descriptor.value)\n        // Typescript / Babel: @action.bound method() { }\n        // also: babel @action.bound method = () => {}\n        return {\n            configurable: true,\n            enumerable: false,\n            get() {\n                defineBoundAction(this, propertyName, descriptor.value || descriptor.initializer.call(this));\n                return this[propertyName];\n            },\n            set: dontReassignFields\n        };\n    }\n    // field decorator Typescript @action.bound method = () => {}\n    return {\n        enumerable: false,\n        configurable: true,\n        set(v) {\n            defineBoundAction(this, propertyName, v);\n        },\n        get() {\n            return undefined;\n        }\n    };\n}\n\nconst action = function action(arg1, arg2, arg3, arg4) {\n    // action(fn() {})\n    if (arguments.length === 1 && typeof arg1 === \"function\")\n        return createAction(arg1.name || \"<unnamed action>\", arg1);\n    // action(\"name\", fn() {})\n    if (arguments.length === 2 && typeof arg2 === \"function\")\n        return createAction(arg1, arg2);\n    // @action(\"name\") fn() {}\n    if (arguments.length === 1 && typeof arg1 === \"string\")\n        return namedActionDecorator(arg1);\n    // @action fn() {}\n    if (arg4 === true) {\n        // apply to instance immediately\n        addHiddenProp(arg1, arg2, createAction(arg1.name || arg2, arg3.value, this));\n    }\n    else {\n        return namedActionDecorator(arg2).apply(null, arguments);\n    }\n};\naction.bound = boundActionDecorator;\nfunction runInAction(arg1, arg2) {\n    const actionName = typeof arg1 === \"string\" ? arg1 : arg1.name || \"<unnamed action>\";\n    const fn = typeof arg1 === \"function\" ? arg1 : arg2;\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(typeof fn === \"function\" && fn.length === 0, \"`runInAction` expects a function without arguments\");\n        if (typeof actionName !== \"string\" || !actionName)\n            fail(`actions should have valid names, got: '${actionName}'`);\n    }\n    return executeAction(actionName, fn, this, undefined);\n}\nfunction isAction(thing) {\n    return typeof thing === \"function\" && thing.isMobxAction === true;\n}\nfunction defineBoundAction(target, propertyName, fn) {\n    addHiddenProp(target, propertyName, createAction(propertyName, fn.bind(target)));\n}\n\n/**\n * Creates a named reactive view and keeps it alive, so that the view is always\n * updated if one of the dependencies changes, even when the view is not further used by something else.\n * @param view The reactive view\n * @returns disposer function, which can be used to stop the view from being updated in the future.\n */\nfunction autorun(view, opts = EMPTY_OBJECT) {\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(typeof view === \"function\", \"Autorun expects a function as first argument\");\n        invariant(isAction(view) === false, \"Autorun does not accept actions since actions are untrackable\");\n    }\n    const name = (opts && opts.name) || view.name || \"Autorun@\" + getNextId();\n    const runSync = !opts.scheduler && !opts.delay;\n    let reaction;\n    if (runSync) {\n        // normal autorun\n        reaction = new Reaction(name, function () {\n            this.track(reactionRunner);\n        }, opts.onError, opts.requiresObservable);\n    }\n    else {\n        const scheduler = createSchedulerFromOptions(opts);\n        // debounced autorun\n        let isScheduled = false;\n        reaction = new Reaction(name, () => {\n            if (!isScheduled) {\n                isScheduled = true;\n                scheduler(() => {\n                    isScheduled = false;\n                    if (!reaction.isDisposed)\n                        reaction.track(reactionRunner);\n                });\n            }\n        }, opts.onError, opts.requiresObservable);\n    }\n    function reactionRunner() {\n        view(reaction);\n    }\n    reaction.schedule();\n    return reaction.getDisposer();\n}\nconst run = (f) => f();\nfunction createSchedulerFromOptions(opts) {\n    return opts.scheduler\n        ? opts.scheduler\n        : opts.delay\n            ? (f) => setTimeout(f, opts.delay)\n            : run;\n}\nfunction reaction(expression, effect, opts = EMPTY_OBJECT) {\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(typeof expression === \"function\", \"First argument to reaction should be a function\");\n        invariant(typeof opts === \"object\", \"Third argument of reactions should be an object\");\n    }\n    const name = opts.name || \"Reaction@\" + getNextId();\n    const effectAction = action(name, opts.onError ? wrapErrorHandler(opts.onError, effect) : effect);\n    const runSync = !opts.scheduler && !opts.delay;\n    const scheduler = createSchedulerFromOptions(opts);\n    let firstTime = true;\n    let isScheduled = false;\n    let value;\n    const equals = opts.compareStructural\n        ? comparer.structural\n        : opts.equals || comparer.default;\n    const r = new Reaction(name, () => {\n        if (firstTime || runSync) {\n            reactionRunner();\n        }\n        else if (!isScheduled) {\n            isScheduled = true;\n            scheduler(reactionRunner);\n        }\n    }, opts.onError, opts.requiresObservable);\n    function reactionRunner() {\n        isScheduled = false; // Q: move into reaction runner?\n        if (r.isDisposed)\n            return;\n        let changed = false;\n        r.track(() => {\n            const nextValue = expression(r);\n            changed = firstTime || !equals(value, nextValue);\n            value = nextValue;\n        });\n        if (firstTime && opts.fireImmediately)\n            effectAction(value, r);\n        if (!firstTime && changed === true)\n            effectAction(value, r);\n        if (firstTime)\n            firstTime = false;\n    }\n    r.schedule();\n    return r.getDisposer();\n}\nfunction wrapErrorHandler(errorHandler, baseFn) {\n    return function () {\n        try {\n            return baseFn.apply(this, arguments);\n        }\n        catch (e) {\n            errorHandler.call(this, e);\n        }\n    };\n}\n\nfunction onBecomeObserved(thing, arg2, arg3) {\n    return interceptHook(\"onBecomeObserved\", thing, arg2, arg3);\n}\nfunction onBecomeUnobserved(thing, arg2, arg3) {\n    return interceptHook(\"onBecomeUnobserved\", thing, arg2, arg3);\n}\nfunction interceptHook(hook, thing, arg2, arg3) {\n    const atom = typeof arg3 === \"function\" ? getAtom(thing, arg2) : getAtom(thing);\n    const cb = typeof arg3 === \"function\" ? arg3 : arg2;\n    const listenersKey = `${hook}Listeners`;\n    if (atom[listenersKey]) {\n        atom[listenersKey].add(cb);\n    }\n    else {\n        atom[listenersKey] = new Set([cb]);\n    }\n    const orig = atom[hook];\n    if (typeof orig !== \"function\")\n        return fail(process.env.NODE_ENV !== \"production\" && \"Not an atom that can be (un)observed\");\n    return function () {\n        const hookListeners = atom[listenersKey];\n        if (hookListeners) {\n            hookListeners.delete(cb);\n            if (hookListeners.size === 0) {\n                delete atom[listenersKey];\n            }\n        }\n    };\n}\n\nfunction configure(options) {\n    const { enforceActions, computedRequiresReaction, computedConfigurable, disableErrorBoundaries, reactionScheduler, reactionRequiresObservable, observableRequiresReaction } = options;\n    if (options.isolateGlobalState === true) {\n        isolateGlobalState();\n    }\n    if (enforceActions !== undefined) {\n        if (typeof enforceActions === \"boolean\" || enforceActions === \"strict\")\n            deprecated(`Deprecated value for 'enforceActions', use 'false' => '\"never\"', 'true' => '\"observed\"', '\"strict\"' => \"'always'\" instead`);\n        let ea;\n        switch (enforceActions) {\n            case true:\n            case \"observed\":\n                ea = true;\n                break;\n            case false:\n            case \"never\":\n                ea = false;\n                break;\n            case \"strict\":\n            case \"always\":\n                ea = \"strict\";\n                break;\n            default:\n                fail(`Invalid value for 'enforceActions': '${enforceActions}', expected 'never', 'always' or 'observed'`);\n        }\n        globalState.enforceActions = ea;\n        globalState.allowStateChanges = ea === true || ea === \"strict\" ? false : true;\n    }\n    if (computedRequiresReaction !== undefined) {\n        globalState.computedRequiresReaction = !!computedRequiresReaction;\n    }\n    if (reactionRequiresObservable !== undefined) {\n        globalState.reactionRequiresObservable = !!reactionRequiresObservable;\n    }\n    if (observableRequiresReaction !== undefined) {\n        globalState.observableRequiresReaction = !!observableRequiresReaction;\n        globalState.allowStateReads = !globalState.observableRequiresReaction;\n    }\n    if (computedConfigurable !== undefined) {\n        globalState.computedConfigurable = !!computedConfigurable;\n    }\n    if (disableErrorBoundaries !== undefined) {\n        if (disableErrorBoundaries === true)\n            console.warn(\"WARNING: Debug feature only. MobX will NOT recover from errors when `disableErrorBoundaries` is enabled.\");\n        globalState.disableErrorBoundaries = !!disableErrorBoundaries;\n    }\n    if (reactionScheduler) {\n        setReactionScheduler(reactionScheduler);\n    }\n}\n\nfunction decorate(thing, decorators) {\n    process.env.NODE_ENV !== \"production\" &&\n        invariant(isPlainObject(decorators), \"Decorators should be a key value map\");\n    const target = typeof thing === \"function\" ? thing.prototype : thing;\n    for (let prop in decorators) {\n        let propertyDecorators = decorators[prop];\n        if (!Array.isArray(propertyDecorators)) {\n            propertyDecorators = [propertyDecorators];\n        }\n        process.env.NODE_ENV !== \"production\" &&\n            invariant(propertyDecorators.every(decorator => typeof decorator === \"function\"), `Decorate: expected a decorator function or array of decorator functions for '${prop}'`);\n        const descriptor = Object.getOwnPropertyDescriptor(target, prop);\n        const newDescriptor = propertyDecorators.reduce((accDescriptor, decorator) => decorator(target, prop, accDescriptor), descriptor);\n        if (newDescriptor)\n            Object.defineProperty(target, prop, newDescriptor);\n    }\n    return thing;\n}\n\nfunction extendObservable(target, properties, decorators, options) {\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(arguments.length >= 2 && arguments.length <= 4, \"'extendObservable' expected 2-4 arguments\");\n        invariant(typeof target === \"object\", \"'extendObservable' expects an object as first argument\");\n        invariant(!isObservableMap(target), \"'extendObservable' should not be used on maps, use map.merge instead\");\n    }\n    options = asCreateObservableOptions(options);\n    const defaultDecorator = getDefaultDecoratorFromObjectOptions(options);\n    initializeInstance(target); // Fixes #1740\n    asObservableObject(target, options.name, defaultDecorator.enhancer); // make sure object is observable, even without initial props\n    if (properties)\n        extendObservableObjectWithProperties(target, properties, decorators, defaultDecorator);\n    return target;\n}\nfunction getDefaultDecoratorFromObjectOptions(options) {\n    return options.defaultDecorator || (options.deep === false ? refDecorator : deepDecorator);\n}\nfunction extendObservableObjectWithProperties(target, properties, decorators, defaultDecorator) {\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant(!isObservable(properties), \"Extending an object with another observable (object) is not supported. Please construct an explicit propertymap, using `toJS` if need. See issue #540\");\n        if (decorators) {\n            const keys = getPlainObjectKeys(decorators);\n            for (const key of keys) {\n                if (!(key in properties))\n                    fail(`Trying to declare a decorator for unspecified property '${stringifyKey(key)}'`);\n            }\n        }\n    }\n    startBatch();\n    try {\n        const keys = getPlainObjectKeys(properties);\n        for (const key of keys) {\n            const descriptor = Object.getOwnPropertyDescriptor(properties, key);\n            if (process.env.NODE_ENV !== \"production\") {\n                if (!isPlainObject(properties))\n                    fail(`'extendObservabe' only accepts plain objects as second argument`);\n                if (Object.getOwnPropertyDescriptor(target, key))\n                    fail(`'extendObservable' can only be used to introduce new properties. Use 'set' or 'decorate' instead. The property '${stringifyKey(key)}' already exists on '${target}'`);\n                if (isComputed(descriptor.value))\n                    fail(`Passing a 'computed' as initial property value is no longer supported by extendObservable. Use a getter or decorator instead`);\n            }\n            const decorator = decorators && key in decorators\n                ? decorators[key]\n                : descriptor.get\n                    ? computedDecorator\n                    : defaultDecorator;\n            if (process.env.NODE_ENV !== \"production\" && typeof decorator !== \"function\")\n                fail(`Not a valid decorator for '${stringifyKey(key)}', got: ${decorator}`);\n            const resultDescriptor = decorator(target, key, descriptor, true);\n            if (resultDescriptor // otherwise, assume already applied, due to `applyToInstance`\n            )\n                Object.defineProperty(target, key, resultDescriptor);\n        }\n    }\n    finally {\n        endBatch();\n    }\n}\n\nfunction getDependencyTree(thing, property) {\n    return nodeToDependencyTree(getAtom(thing, property));\n}\nfunction nodeToDependencyTree(node) {\n    const result = {\n        name: node.name\n    };\n    if (node.observing && node.observing.length > 0)\n        result.dependencies = unique(node.observing).map(nodeToDependencyTree);\n    return result;\n}\nfunction getObserverTree(thing, property) {\n    return nodeToObserverTree(getAtom(thing, property));\n}\nfunction nodeToObserverTree(node) {\n    const result = {\n        name: node.name\n    };\n    if (hasObservers(node))\n        result.observers = Array.from(getObservers(node)).map(nodeToObserverTree);\n    return result;\n}\n\nlet generatorId = 0;\nclass FlowCancellationError extends Error {\n    constructor() {\n        super(\"FLOW_CANCELLED\");\n    }\n}\nfunction isFlowCancellationError(error) {\n    return error instanceof FlowCancellationError;\n}\nfunction flow(generator) {\n    if (arguments.length !== 1)\n        fail(!!process.env.NODE_ENV && `Flow expects 1 argument and cannot be used as decorator`);\n    const name = generator.name || \"<unnamed flow>\";\n    // Implementation based on https://github.com/tj/co/blob/master/index.js\n    return function () {\n        const ctx = this;\n        const args = arguments;\n        const runId = ++generatorId;\n        const gen = action(`${name} - runid: ${runId} - init`, generator).apply(ctx, args);\n        let rejector;\n        let pendingPromise = undefined;\n        const promise = new Promise(function (resolve, reject) {\n            let stepId = 0;\n            rejector = reject;\n            function onFulfilled(res) {\n                pendingPromise = undefined;\n                let ret;\n                try {\n                    ret = action(`${name} - runid: ${runId} - yield ${stepId++}`, gen.next).call(gen, res);\n                }\n                catch (e) {\n                    return reject(e);\n                }\n                next(ret);\n            }\n            function onRejected(err) {\n                pendingPromise = undefined;\n                let ret;\n                try {\n                    ret = action(`${name} - runid: ${runId} - yield ${stepId++}`, gen.throw).call(gen, err);\n                }\n                catch (e) {\n                    return reject(e);\n                }\n                next(ret);\n            }\n            function next(ret) {\n                if (ret && typeof ret.then === \"function\") {\n                    // an async iterator\n                    ret.then(next, reject);\n                    return;\n                }\n                if (ret.done)\n                    return resolve(ret.value);\n                pendingPromise = Promise.resolve(ret.value);\n                return pendingPromise.then(onFulfilled, onRejected);\n            }\n            onFulfilled(undefined); // kick off the process\n        });\n        promise.cancel = action(`${name} - runid: ${runId} - cancel`, function () {\n            try {\n                if (pendingPromise)\n                    cancelPromise(pendingPromise);\n                // Finally block can return (or yield) stuff..\n                const res = gen.return(undefined);\n                // eat anything that promise would do, it's cancelled!\n                const yieldedPromise = Promise.resolve(res.value);\n                yieldedPromise.then(noop, noop);\n                cancelPromise(yieldedPromise); // maybe it can be cancelled :)\n                // reject our original promise\n                rejector(new FlowCancellationError());\n            }\n            catch (e) {\n                rejector(e); // there could be a throwing finally block\n            }\n        });\n        return promise;\n    };\n}\nfunction cancelPromise(promise) {\n    if (typeof promise.cancel === \"function\")\n        promise.cancel();\n}\n\nfunction interceptReads(thing, propOrHandler, handler) {\n    let target;\n    if (isObservableMap(thing) || isObservableArray(thing) || isObservableValue(thing)) {\n        target = getAdministration(thing);\n    }\n    else if (isObservableObject(thing)) {\n        if (typeof propOrHandler !== \"string\")\n            return fail(process.env.NODE_ENV !== \"production\" &&\n                `InterceptReads can only be used with a specific property, not with an object in general`);\n        target = getAdministration(thing, propOrHandler);\n    }\n    else {\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            `Expected observable map, object or array as first array`);\n    }\n    if (target.dehancer !== undefined)\n        return fail(process.env.NODE_ENV !== \"production\" && `An intercept reader was already established`);\n    target.dehancer = typeof propOrHandler === \"function\" ? propOrHandler : handler;\n    return () => {\n        target.dehancer = undefined;\n    };\n}\n\nfunction intercept(thing, propOrHandler, handler) {\n    if (typeof handler === \"function\")\n        return interceptProperty(thing, propOrHandler, handler);\n    else\n        return interceptInterceptable(thing, propOrHandler);\n}\nfunction interceptInterceptable(thing, handler) {\n    return getAdministration(thing).intercept(handler);\n}\nfunction interceptProperty(thing, property, handler) {\n    return getAdministration(thing, property).intercept(handler);\n}\n\nfunction _isComputed(value, property) {\n    if (value === null || value === undefined)\n        return false;\n    if (property !== undefined) {\n        if (isObservableObject(value) === false)\n            return false;\n        if (!value[$mobx].values.has(property))\n            return false;\n        const atom = getAtom(value, property);\n        return isComputedValue(atom);\n    }\n    return isComputedValue(value);\n}\nfunction isComputed(value) {\n    if (arguments.length > 1)\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            `isComputed expects only 1 argument. Use isObservableProp to inspect the observability of a property`);\n    return _isComputed(value);\n}\nfunction isComputedProp(value, propName) {\n    if (typeof propName !== \"string\")\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            `isComputed expected a property name as second argument`);\n    return _isComputed(value, propName);\n}\n\nfunction _isObservable(value, property) {\n    if (value === null || value === undefined)\n        return false;\n    if (property !== undefined) {\n        if (process.env.NODE_ENV !== \"production\" &&\n            (isObservableMap(value) || isObservableArray(value)))\n            return fail(\"isObservable(object, propertyName) is not supported for arrays and maps. Use map.has or array.length instead.\");\n        if (isObservableObject(value)) {\n            return value[$mobx].values.has(property);\n        }\n        return false;\n    }\n    // For first check, see #701\n    return (isObservableObject(value) ||\n        !!value[$mobx] ||\n        isAtom(value) ||\n        isReaction(value) ||\n        isComputedValue(value));\n}\nfunction isObservable(value) {\n    if (arguments.length !== 1)\n        fail(process.env.NODE_ENV !== \"production\" &&\n            `isObservable expects only 1 argument. Use isObservableProp to inspect the observability of a property`);\n    return _isObservable(value);\n}\nfunction isObservableProp(value, propName) {\n    if (typeof propName !== \"string\")\n        return fail(process.env.NODE_ENV !== \"production\" && `expected a property name as second argument`);\n    return _isObservable(value, propName);\n}\n\nfunction keys(obj) {\n    if (isObservableObject(obj)) {\n        return obj[$mobx].getKeys();\n    }\n    if (isObservableMap(obj)) {\n        return Array.from(obj.keys());\n    }\n    if (isObservableSet(obj)) {\n        return Array.from(obj.keys());\n    }\n    if (isObservableArray(obj)) {\n        return obj.map((_, index) => index);\n    }\n    return fail(process.env.NODE_ENV !== \"production\" &&\n        \"'keys()' can only be used on observable objects, arrays, sets and maps\");\n}\nfunction values(obj) {\n    if (isObservableObject(obj)) {\n        return keys(obj).map(key => obj[key]);\n    }\n    if (isObservableMap(obj)) {\n        return keys(obj).map(key => obj.get(key));\n    }\n    if (isObservableSet(obj)) {\n        return Array.from(obj.values());\n    }\n    if (isObservableArray(obj)) {\n        return obj.slice();\n    }\n    return fail(process.env.NODE_ENV !== \"production\" &&\n        \"'values()' can only be used on observable objects, arrays, sets and maps\");\n}\nfunction entries(obj) {\n    if (isObservableObject(obj)) {\n        return keys(obj).map(key => [key, obj[key]]);\n    }\n    if (isObservableMap(obj)) {\n        return keys(obj).map(key => [key, obj.get(key)]);\n    }\n    if (isObservableSet(obj)) {\n        return Array.from(obj.entries());\n    }\n    if (isObservableArray(obj)) {\n        return obj.map((key, index) => [index, key]);\n    }\n    return fail(process.env.NODE_ENV !== \"production\" &&\n        \"'entries()' can only be used on observable objects, arrays and maps\");\n}\nfunction set(obj, key, value) {\n    if (arguments.length === 2 && !isObservableSet(obj)) {\n        startBatch();\n        const values = key;\n        try {\n            for (let key in values)\n                set(obj, key, values[key]);\n        }\n        finally {\n            endBatch();\n        }\n        return;\n    }\n    if (isObservableObject(obj)) {\n        const adm = obj[$mobx];\n        const existingObservable = adm.values.get(key);\n        if (existingObservable) {\n            adm.write(key, value);\n        }\n        else {\n            adm.addObservableProp(key, value, adm.defaultEnhancer);\n        }\n    }\n    else if (isObservableMap(obj)) {\n        obj.set(key, value);\n    }\n    else if (isObservableSet(obj)) {\n        obj.add(key);\n    }\n    else if (isObservableArray(obj)) {\n        if (typeof key !== \"number\")\n            key = parseInt(key, 10);\n        invariant(key >= 0, `Not a valid index: '${key}'`);\n        startBatch();\n        if (key >= obj.length)\n            obj.length = key + 1;\n        obj[key] = value;\n        endBatch();\n    }\n    else {\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            \"'set()' can only be used on observable objects, arrays and maps\");\n    }\n}\nfunction remove(obj, key) {\n    if (isObservableObject(obj)) {\n        obj[$mobx].remove(key);\n    }\n    else if (isObservableMap(obj)) {\n        obj.delete(key);\n    }\n    else if (isObservableSet(obj)) {\n        obj.delete(key);\n    }\n    else if (isObservableArray(obj)) {\n        if (typeof key !== \"number\")\n            key = parseInt(key, 10);\n        invariant(key >= 0, `Not a valid index: '${key}'`);\n        obj.splice(key, 1);\n    }\n    else {\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            \"'remove()' can only be used on observable objects, arrays and maps\");\n    }\n}\nfunction has(obj, key) {\n    if (isObservableObject(obj)) {\n        // return keys(obj).indexOf(key) >= 0\n        const adm = getAdministration(obj);\n        return adm.has(key);\n    }\n    else if (isObservableMap(obj)) {\n        return obj.has(key);\n    }\n    else if (isObservableSet(obj)) {\n        return obj.has(key);\n    }\n    else if (isObservableArray(obj)) {\n        return key >= 0 && key < obj.length;\n    }\n    else {\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            \"'has()' can only be used on observable objects, arrays and maps\");\n    }\n}\nfunction get(obj, key) {\n    if (!has(obj, key))\n        return undefined;\n    if (isObservableObject(obj)) {\n        return obj[key];\n    }\n    else if (isObservableMap(obj)) {\n        return obj.get(key);\n    }\n    else if (isObservableArray(obj)) {\n        return obj[key];\n    }\n    else {\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            \"'get()' can only be used on observable objects, arrays and maps\");\n    }\n}\n\nfunction observe(thing, propOrCb, cbOrFire, fireImmediately) {\n    if (typeof cbOrFire === \"function\")\n        return observeObservableProperty(thing, propOrCb, cbOrFire, fireImmediately);\n    else\n        return observeObservable(thing, propOrCb, cbOrFire);\n}\nfunction observeObservable(thing, listener, fireImmediately) {\n    return getAdministration(thing).observe(listener, fireImmediately);\n}\nfunction observeObservableProperty(thing, property, listener, fireImmediately) {\n    return getAdministration(thing, property).observe(listener, fireImmediately);\n}\n\nconst defaultOptions = {\n    detectCycles: true,\n    exportMapsAsObjects: true,\n    recurseEverything: false\n};\nfunction cache(map, key, value, options) {\n    if (options.detectCycles)\n        map.set(key, value);\n    return value;\n}\nfunction toJSHelper(source, options, __alreadySeen) {\n    if (!options.recurseEverything && !isObservable(source))\n        return source;\n    if (typeof source !== \"object\")\n        return source;\n    // Directly return null if source is null\n    if (source === null)\n        return null;\n    // Directly return the Date object itself if contained in the observable\n    if (source instanceof Date)\n        return source;\n    if (isObservableValue(source))\n        return toJSHelper(source.get(), options, __alreadySeen);\n    // make sure we track the keys of the object\n    if (isObservable(source))\n        keys(source);\n    const detectCycles = options.detectCycles === true;\n    if (detectCycles && source !== null && __alreadySeen.has(source)) {\n        return __alreadySeen.get(source);\n    }\n    if (isObservableArray(source) || Array.isArray(source)) {\n        const res = cache(__alreadySeen, source, [], options);\n        const toAdd = source.map(value => toJSHelper(value, options, __alreadySeen));\n        res.length = toAdd.length;\n        for (let i = 0, l = toAdd.length; i < l; i++)\n            res[i] = toAdd[i];\n        return res;\n    }\n    if (isObservableSet(source) || Object.getPrototypeOf(source) === Set.prototype) {\n        if (options.exportMapsAsObjects === false) {\n            const res = cache(__alreadySeen, source, new Set(), options);\n            source.forEach(value => {\n                res.add(toJSHelper(value, options, __alreadySeen));\n            });\n            return res;\n        }\n        else {\n            const res = cache(__alreadySeen, source, [], options);\n            source.forEach(value => {\n                res.push(toJSHelper(value, options, __alreadySeen));\n            });\n            return res;\n        }\n    }\n    if (isObservableMap(source) || Object.getPrototypeOf(source) === Map.prototype) {\n        if (options.exportMapsAsObjects === false) {\n            const res = cache(__alreadySeen, source, new Map(), options);\n            source.forEach((value, key) => {\n                res.set(key, toJSHelper(value, options, __alreadySeen));\n            });\n            return res;\n        }\n        else {\n            const res = cache(__alreadySeen, source, {}, options);\n            source.forEach((value, key) => {\n                res[key] = toJSHelper(value, options, __alreadySeen);\n            });\n            return res;\n        }\n    }\n    // Fallback to the situation that source is an ObservableObject or a plain object\n    const res = cache(__alreadySeen, source, {}, options);\n    getPlainObjectKeys(source).forEach(key => {\n        res[key] = toJSHelper(source[key], options, __alreadySeen);\n    });\n    return res;\n}\nfunction toJS(source, options) {\n    // backward compatibility\n    if (typeof options === \"boolean\")\n        options = { detectCycles: options };\n    if (!options)\n        options = defaultOptions;\n    options.detectCycles =\n        options.detectCycles === undefined\n            ? options.recurseEverything === true\n            : options.detectCycles === true;\n    let __alreadySeen;\n    if (options.detectCycles)\n        __alreadySeen = new Map();\n    return toJSHelper(source, options, __alreadySeen);\n}\n\nfunction trace(...args) {\n    let enterBreakPoint = false;\n    if (typeof args[args.length - 1] === \"boolean\")\n        enterBreakPoint = args.pop();\n    const derivation = getAtomFromArgs(args);\n    if (!derivation) {\n        return fail(process.env.NODE_ENV !== \"production\" &&\n            `'trace(break?)' can only be used inside a tracked computed value or a Reaction. Consider passing in the computed value or reaction explicitly`);\n    }\n    if (derivation.isTracing === TraceMode.NONE) {\n        console.log(`[mobx.trace] '${derivation.name}' tracing enabled`);\n    }\n    derivation.isTracing = enterBreakPoint ? TraceMode.BREAK : TraceMode.LOG;\n}\nfunction getAtomFromArgs(args) {\n    switch (args.length) {\n        case 0:\n            return globalState.trackingDerivation;\n        case 1:\n            return getAtom(args[0]);\n        case 2:\n            return getAtom(args[0], args[1]);\n    }\n}\n\n/**\n * During a transaction no views are updated until the end of the transaction.\n * The transaction will be run synchronously nonetheless.\n *\n * @param action a function that updates some reactive state\n * @returns any value that was returned by the 'action' parameter.\n */\nfunction transaction(action, thisArg = undefined) {\n    startBatch();\n    try {\n        return action.apply(thisArg);\n    }\n    finally {\n        endBatch();\n    }\n}\n\nfunction when(predicate, arg1, arg2) {\n    if (arguments.length === 1 || (arg1 && typeof arg1 === \"object\"))\n        return whenPromise(predicate, arg1);\n    return _when(predicate, arg1, arg2 || {});\n}\nfunction _when(predicate, effect, opts) {\n    let timeoutHandle;\n    if (typeof opts.timeout === \"number\") {\n        timeoutHandle = setTimeout(() => {\n            if (!disposer[$mobx].isDisposed) {\n                disposer();\n                const error = new Error(\"WHEN_TIMEOUT\");\n                if (opts.onError)\n                    opts.onError(error);\n                else\n                    throw error;\n            }\n        }, opts.timeout);\n    }\n    opts.name = opts.name || \"When@\" + getNextId();\n    const effectAction = createAction(opts.name + \"-effect\", effect);\n    const disposer = autorun(r => {\n        if (predicate()) {\n            r.dispose();\n            if (timeoutHandle)\n                clearTimeout(timeoutHandle);\n            effectAction();\n        }\n    }, opts);\n    return disposer;\n}\nfunction whenPromise(predicate, opts) {\n    if (process.env.NODE_ENV !== \"production\" && opts && opts.onError)\n        return fail(`the options 'onError' and 'promise' cannot be combined`);\n    let cancel;\n    const res = new Promise((resolve, reject) => {\n        let disposer = _when(predicate, resolve, Object.assign(Object.assign({}, opts), { onError: reject }));\n        cancel = () => {\n            disposer();\n            reject(\"WHEN_CANCELLED\");\n        };\n    });\n    res.cancel = cancel;\n    return res;\n}\n\nfunction getAdm(target) {\n    return target[$mobx];\n}\nfunction isPropertyKey(val) {\n    return typeof val === \"string\" || typeof val === \"number\" || typeof val === \"symbol\";\n}\n// Optimization: we don't need the intermediate objects and could have a completely custom administration for DynamicObjects,\n// and skip either the internal values map, or the base object with its property descriptors!\nconst objectProxyTraps = {\n    has(target, name) {\n        if (name === $mobx || name === \"constructor\" || name === mobxDidRunLazyInitializersSymbol)\n            return true;\n        const adm = getAdm(target);\n        // MWE: should `in` operator be reactive? If not, below code path will be faster / more memory efficient\n        // TODO: check performance stats!\n        // if (adm.values.get(name as string)) return true\n        if (isPropertyKey(name))\n            return adm.has(name);\n        return name in target;\n    },\n    get(target, name) {\n        if (name === $mobx || name === \"constructor\" || name === mobxDidRunLazyInitializersSymbol)\n            return target[name];\n        const adm = getAdm(target);\n        const observable = adm.values.get(name);\n        if (observable instanceof Atom) {\n            const result = observable.get();\n            if (result === undefined) {\n                // This fixes #1796, because deleting a prop that has an\n                // undefined value won't retrigger a observer (no visible effect),\n                // the autorun wouldn't subscribe to future key changes (see also next comment)\n                adm.has(name);\n            }\n            return result;\n        }\n        // make sure we start listening to future keys\n        // note that we only do this here for optimization\n        if (isPropertyKey(name))\n            adm.has(name);\n        return target[name];\n    },\n    set(target, name, value) {\n        if (!isPropertyKey(name))\n            return false;\n        set(target, name, value);\n        return true;\n    },\n    deleteProperty(target, name) {\n        if (!isPropertyKey(name))\n            return false;\n        const adm = getAdm(target);\n        adm.remove(name);\n        return true;\n    },\n    ownKeys(target) {\n        const adm = getAdm(target);\n        adm.keysAtom.reportObserved();\n        return Reflect.ownKeys(target);\n    },\n    preventExtensions(target) {\n        fail(`Dynamic observable objects cannot be frozen`);\n        return false;\n    }\n};\nfunction createDynamicObservableObject(base) {\n    const proxy = new Proxy(base, objectProxyTraps);\n    base[$mobx].proxy = proxy;\n    return proxy;\n}\n\nfunction hasInterceptors(interceptable) {\n    return interceptable.interceptors !== undefined && interceptable.interceptors.length > 0;\n}\nfunction registerInterceptor(interceptable, handler) {\n    const interceptors = interceptable.interceptors || (interceptable.interceptors = []);\n    interceptors.push(handler);\n    return once(() => {\n        const idx = interceptors.indexOf(handler);\n        if (idx !== -1)\n            interceptors.splice(idx, 1);\n    });\n}\nfunction interceptChange(interceptable, change) {\n    const prevU = untrackedStart();\n    try {\n        // Interceptor can modify the array, copy it to avoid concurrent modification, see #1950\n        const interceptors = [...(interceptable.interceptors || [])];\n        for (let i = 0, l = interceptors.length; i < l; i++) {\n            change = interceptors[i](change);\n            invariant(!change || change.type, \"Intercept handlers should return nothing or a change object\");\n            if (!change)\n                break;\n        }\n        return change;\n    }\n    finally {\n        untrackedEnd(prevU);\n    }\n}\n\nfunction hasListeners(listenable) {\n    return listenable.changeListeners !== undefined && listenable.changeListeners.length > 0;\n}\nfunction registerListener(listenable, handler) {\n    const listeners = listenable.changeListeners || (listenable.changeListeners = []);\n    listeners.push(handler);\n    return once(() => {\n        const idx = listeners.indexOf(handler);\n        if (idx !== -1)\n            listeners.splice(idx, 1);\n    });\n}\nfunction notifyListeners(listenable, change) {\n    const prevU = untrackedStart();\n    let listeners = listenable.changeListeners;\n    if (!listeners)\n        return;\n    listeners = listeners.slice();\n    for (let i = 0, l = listeners.length; i < l; i++) {\n        listeners[i](change);\n    }\n    untrackedEnd(prevU);\n}\n\nconst MAX_SPLICE_SIZE = 10000; // See e.g. https://github.com/mobxjs/mobx/issues/859\nconst arrayTraps = {\n    get(target, name) {\n        if (name === $mobx)\n            return target[$mobx];\n        if (name === \"length\")\n            return target[$mobx].getArrayLength();\n        if (typeof name === \"number\") {\n            return arrayExtensions.get.call(target, name);\n        }\n        if (typeof name === \"string\" && !isNaN(name)) {\n            return arrayExtensions.get.call(target, parseInt(name));\n        }\n        if (arrayExtensions.hasOwnProperty(name)) {\n            return arrayExtensions[name];\n        }\n        return target[name];\n    },\n    set(target, name, value) {\n        if (name === \"length\") {\n            target[$mobx].setArrayLength(value);\n        }\n        if (typeof name === \"number\") {\n            arrayExtensions.set.call(target, name, value);\n        }\n        if (typeof name === \"symbol\" || isNaN(name)) {\n            target[name] = value;\n        }\n        else {\n            // numeric string\n            arrayExtensions.set.call(target, parseInt(name), value);\n        }\n        return true;\n    },\n    preventExtensions(target) {\n        fail(`Observable arrays cannot be frozen`);\n        return false;\n    }\n};\nfunction createObservableArray(initialValues, enhancer, name = \"ObservableArray@\" + getNextId(), owned = false) {\n    const adm = new ObservableArrayAdministration(name, enhancer, owned);\n    addHiddenFinalProp(adm.values, $mobx, adm);\n    const proxy = new Proxy(adm.values, arrayTraps);\n    adm.proxy = proxy;\n    if (initialValues && initialValues.length) {\n        const prev = allowStateChangesStart(true);\n        adm.spliceWithArray(0, 0, initialValues);\n        allowStateChangesEnd(prev);\n    }\n    return proxy;\n}\nclass ObservableArrayAdministration {\n    constructor(name, enhancer, owned) {\n        this.owned = owned;\n        this.values = [];\n        this.proxy = undefined;\n        this.lastKnownLength = 0;\n        this.atom = new Atom(name || \"ObservableArray@\" + getNextId());\n        this.enhancer = (newV, oldV) => enhancer(newV, oldV, name + \"[..]\");\n    }\n    dehanceValue(value) {\n        if (this.dehancer !== undefined)\n            return this.dehancer(value);\n        return value;\n    }\n    dehanceValues(values) {\n        if (this.dehancer !== undefined && values.length > 0)\n            return values.map(this.dehancer);\n        return values;\n    }\n    intercept(handler) {\n        return registerInterceptor(this, handler);\n    }\n    observe(listener, fireImmediately = false) {\n        if (fireImmediately) {\n            listener({\n                object: this.proxy,\n                type: \"splice\",\n                index: 0,\n                added: this.values.slice(),\n                addedCount: this.values.length,\n                removed: [],\n                removedCount: 0\n            });\n        }\n        return registerListener(this, listener);\n    }\n    getArrayLength() {\n        this.atom.reportObserved();\n        return this.values.length;\n    }\n    setArrayLength(newLength) {\n        if (typeof newLength !== \"number\" || newLength < 0)\n            throw new Error(\"[mobx.array] Out of range: \" + newLength);\n        let currentLength = this.values.length;\n        if (newLength === currentLength)\n            return;\n        else if (newLength > currentLength) {\n            const newItems = new Array(newLength - currentLength);\n            for (let i = 0; i < newLength - currentLength; i++)\n                newItems[i] = undefined; // No Array.fill everywhere...\n            this.spliceWithArray(currentLength, 0, newItems);\n        }\n        else\n            this.spliceWithArray(newLength, currentLength - newLength);\n    }\n    updateArrayLength(oldLength, delta) {\n        if (oldLength !== this.lastKnownLength)\n            throw new Error(\"[mobx] Modification exception: the internal structure of an observable array was changed.\");\n        this.lastKnownLength += delta;\n    }\n    spliceWithArray(index, deleteCount, newItems) {\n        checkIfStateModificationsAreAllowed(this.atom);\n        const length = this.values.length;\n        if (index === undefined)\n            index = 0;\n        else if (index > length)\n            index = length;\n        else if (index < 0)\n            index = Math.max(0, length + index);\n        if (arguments.length === 1)\n            deleteCount = length - index;\n        else if (deleteCount === undefined || deleteCount === null)\n            deleteCount = 0;\n        else\n            deleteCount = Math.max(0, Math.min(deleteCount, length - index));\n        if (newItems === undefined)\n            newItems = EMPTY_ARRAY;\n        if (hasInterceptors(this)) {\n            const change = interceptChange(this, {\n                object: this.proxy,\n                type: \"splice\",\n                index,\n                removedCount: deleteCount,\n                added: newItems\n            });\n            if (!change)\n                return EMPTY_ARRAY;\n            deleteCount = change.removedCount;\n            newItems = change.added;\n        }\n        newItems = newItems.length === 0 ? newItems : newItems.map(v => this.enhancer(v, undefined));\n        if (process.env.NODE_ENV !== \"production\") {\n            const lengthDelta = newItems.length - deleteCount;\n            this.updateArrayLength(length, lengthDelta); // checks if internal array wasn't modified\n        }\n        const res = this.spliceItemsIntoValues(index, deleteCount, newItems);\n        if (deleteCount !== 0 || newItems.length !== 0)\n            this.notifyArraySplice(index, newItems, res);\n        return this.dehanceValues(res);\n    }\n    spliceItemsIntoValues(index, deleteCount, newItems) {\n        if (newItems.length < MAX_SPLICE_SIZE) {\n            return this.values.splice(index, deleteCount, ...newItems);\n        }\n        else {\n            const res = this.values.slice(index, index + deleteCount);\n            this.values = this.values\n                .slice(0, index)\n                .concat(newItems, this.values.slice(index + deleteCount));\n            return res;\n        }\n    }\n    notifyArrayChildUpdate(index, newValue, oldValue) {\n        const notifySpy = !this.owned && isSpyEnabled();\n        const notify = hasListeners(this);\n        const change = notify || notifySpy\n            ? {\n                object: this.proxy,\n                type: \"update\",\n                index,\n                newValue,\n                oldValue\n            }\n            : null;\n        // The reason why this is on right hand side here (and not above), is this way the uglifier will drop it, but it won't\n        // cause any runtime overhead in development mode without NODE_ENV set, unless spying is enabled\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportStart(Object.assign(Object.assign({}, change), { name: this.atom.name }));\n        this.atom.reportChanged();\n        if (notify)\n            notifyListeners(this, change);\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportEnd();\n    }\n    notifyArraySplice(index, added, removed) {\n        const notifySpy = !this.owned && isSpyEnabled();\n        const notify = hasListeners(this);\n        const change = notify || notifySpy\n            ? {\n                object: this.proxy,\n                type: \"splice\",\n                index,\n                removed,\n                added,\n                removedCount: removed.length,\n                addedCount: added.length\n            }\n            : null;\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportStart(Object.assign(Object.assign({}, change), { name: this.atom.name }));\n        this.atom.reportChanged();\n        // conform: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/observe\n        if (notify)\n            notifyListeners(this, change);\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportEnd();\n    }\n}\nconst arrayExtensions = {\n    intercept(handler) {\n        return this[$mobx].intercept(handler);\n    },\n    observe(listener, fireImmediately = false) {\n        const adm = this[$mobx];\n        return adm.observe(listener, fireImmediately);\n    },\n    clear() {\n        return this.splice(0);\n    },\n    replace(newItems) {\n        const adm = this[$mobx];\n        return adm.spliceWithArray(0, adm.values.length, newItems);\n    },\n    /**\n     * Converts this array back to a (shallow) javascript structure.\n     * For a deep clone use mobx.toJS\n     */\n    toJS() {\n        return this.slice();\n    },\n    toJSON() {\n        // Used by JSON.stringify\n        return this.toJS();\n    },\n    /*\n     * functions that do alter the internal structure of the array, (based on lib.es6.d.ts)\n     * since these functions alter the inner structure of the array, the have side effects.\n     * Because the have side effects, they should not be used in computed function,\n     * and for that reason the do not call dependencyState.notifyObserved\n     */\n    splice(index, deleteCount, ...newItems) {\n        const adm = this[$mobx];\n        switch (arguments.length) {\n            case 0:\n                return [];\n            case 1:\n                return adm.spliceWithArray(index);\n            case 2:\n                return adm.spliceWithArray(index, deleteCount);\n        }\n        return adm.spliceWithArray(index, deleteCount, newItems);\n    },\n    spliceWithArray(index, deleteCount, newItems) {\n        const adm = this[$mobx];\n        return adm.spliceWithArray(index, deleteCount, newItems);\n    },\n    push(...items) {\n        const adm = this[$mobx];\n        adm.spliceWithArray(adm.values.length, 0, items);\n        return adm.values.length;\n    },\n    pop() {\n        return this.splice(Math.max(this[$mobx].values.length - 1, 0), 1)[0];\n    },\n    shift() {\n        return this.splice(0, 1)[0];\n    },\n    unshift(...items) {\n        const adm = this[$mobx];\n        adm.spliceWithArray(0, 0, items);\n        return adm.values.length;\n    },\n    reverse() {\n        // reverse by default mutates in place before returning the result\n        // which makes it both a 'derivation' and a 'mutation'.\n        // so we deviate from the default and just make it an dervitation\n        if (process.env.NODE_ENV !== \"production\") {\n            console.warn(\"[mobx] `observableArray.reverse()` will not update the array in place. Use `observableArray.slice().reverse()` to suppress this warning and perform the operation on a copy, or `observableArray.replace(observableArray.slice().reverse())` to reverse & update in place\");\n        }\n        const clone = this.slice();\n        return clone.reverse.apply(clone, arguments);\n    },\n    sort(compareFn) {\n        // sort by default mutates in place before returning the result\n        // which goes against all good practices. Let's not change the array in place!\n        if (process.env.NODE_ENV !== \"production\") {\n            console.warn(\"[mobx] `observableArray.sort()` will not update the array in place. Use `observableArray.slice().sort()` to suppress this warning and perform the operation on a copy, or `observableArray.replace(observableArray.slice().sort())` to sort & update in place\");\n        }\n        const clone = this.slice();\n        return clone.sort.apply(clone, arguments);\n    },\n    remove(value) {\n        const adm = this[$mobx];\n        const idx = adm.dehanceValues(adm.values).indexOf(value);\n        if (idx > -1) {\n            this.splice(idx, 1);\n            return true;\n        }\n        return false;\n    },\n    get(index) {\n        const adm = this[$mobx];\n        if (adm) {\n            if (index < adm.values.length) {\n                adm.atom.reportObserved();\n                return adm.dehanceValue(adm.values[index]);\n            }\n            console.warn(`[mobx.array] Attempt to read an array index (${index}) that is out of bounds (${adm.values.length}). Please check length first. Out of bound indices will not be tracked by MobX`);\n        }\n        return undefined;\n    },\n    set(index, newValue) {\n        const adm = this[$mobx];\n        const values = adm.values;\n        if (index < values.length) {\n            // update at index in range\n            checkIfStateModificationsAreAllowed(adm.atom);\n            const oldValue = values[index];\n            if (hasInterceptors(adm)) {\n                const change = interceptChange(adm, {\n                    type: \"update\",\n                    object: adm.proxy,\n                    index,\n                    newValue\n                });\n                if (!change)\n                    return;\n                newValue = change.newValue;\n            }\n            newValue = adm.enhancer(newValue, oldValue);\n            const changed = newValue !== oldValue;\n            if (changed) {\n                values[index] = newValue;\n                adm.notifyArrayChildUpdate(index, newValue, oldValue);\n            }\n        }\n        else if (index === values.length) {\n            // add a new item\n            adm.spliceWithArray(index, 0, [newValue]);\n        }\n        else {\n            // out of bounds\n            throw new Error(`[mobx.array] Index out of bounds, ${index} is larger than ${values.length}`);\n        }\n    }\n};\n[\n    \"concat\",\n    \"every\",\n    \"filter\",\n    \"forEach\",\n    \"indexOf\",\n    \"join\",\n    \"lastIndexOf\",\n    \"map\",\n    \"reduce\",\n    \"reduceRight\",\n    \"slice\",\n    \"some\",\n    \"toString\",\n    \"toLocaleString\"\n].forEach(funcName => {\n    arrayExtensions[funcName] = function () {\n        const adm = this[$mobx];\n        adm.atom.reportObserved();\n        const res = adm.dehanceValues(adm.values);\n        return res[funcName].apply(res, arguments);\n    };\n});\nconst isObservableArrayAdministration = createInstanceofPredicate(\"ObservableArrayAdministration\", ObservableArrayAdministration);\nfunction isObservableArray(thing) {\n    return isObject(thing) && isObservableArrayAdministration(thing[$mobx]);\n}\n\nvar _a;\nconst ObservableMapMarker = {};\n// just extend Map? See also https://gist.github.com/nestharus/13b4d74f2ef4a2f4357dbd3fc23c1e54\n// But: https://github.com/mobxjs/mobx/issues/1556\nclass ObservableMap {\n    constructor(initialData, enhancer = deepEnhancer, name = \"ObservableMap@\" + getNextId()) {\n        this.enhancer = enhancer;\n        this.name = name;\n        this[_a] = ObservableMapMarker;\n        this._keysAtom = createAtom(`${this.name}.keys()`);\n        this[Symbol.toStringTag] = \"Map\";\n        if (typeof Map !== \"function\") {\n            throw new Error(\"mobx.map requires Map polyfill for the current browser. Check babel-polyfill or core-js/es6/map.js\");\n        }\n        this._data = new Map();\n        this._hasMap = new Map();\n        this.merge(initialData);\n    }\n    _has(key) {\n        return this._data.has(key);\n    }\n    has(key) {\n        if (!globalState.trackingDerivation)\n            return this._has(key);\n        let entry = this._hasMap.get(key);\n        if (!entry) {\n            // todo: replace with atom (breaking change)\n            const newEntry = (entry = new ObservableValue(this._has(key), referenceEnhancer, `${this.name}.${stringifyKey(key)}?`, false));\n            this._hasMap.set(key, newEntry);\n            onBecomeUnobserved(newEntry, () => this._hasMap.delete(key));\n        }\n        return entry.get();\n    }\n    set(key, value) {\n        const hasKey = this._has(key);\n        if (hasInterceptors(this)) {\n            const change = interceptChange(this, {\n                type: hasKey ? \"update\" : \"add\",\n                object: this,\n                newValue: value,\n                name: key\n            });\n            if (!change)\n                return this;\n            value = change.newValue;\n        }\n        if (hasKey) {\n            this._updateValue(key, value);\n        }\n        else {\n            this._addValue(key, value);\n        }\n        return this;\n    }\n    delete(key) {\n        if (hasInterceptors(this)) {\n            const change = interceptChange(this, {\n                type: \"delete\",\n                object: this,\n                name: key\n            });\n            if (!change)\n                return false;\n        }\n        if (this._has(key)) {\n            const notifySpy = isSpyEnabled();\n            const notify = hasListeners(this);\n            const change = notify || notifySpy\n                ? {\n                    type: \"delete\",\n                    object: this,\n                    oldValue: this._data.get(key).value,\n                    name: key\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart(Object.assign(Object.assign({}, change), { name: this.name, key }));\n            transaction(() => {\n                this._keysAtom.reportChanged();\n                this._updateHasMapEntry(key, false);\n                const observable = this._data.get(key);\n                observable.setNewValue(undefined);\n                this._data.delete(key);\n            });\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n            return true;\n        }\n        return false;\n    }\n    _updateHasMapEntry(key, value) {\n        let entry = this._hasMap.get(key);\n        if (entry) {\n            entry.setNewValue(value);\n        }\n    }\n    _updateValue(key, newValue) {\n        const observable = this._data.get(key);\n        newValue = observable.prepareNewValue(newValue);\n        if (newValue !== globalState.UNCHANGED) {\n            const notifySpy = isSpyEnabled();\n            const notify = hasListeners(this);\n            const change = notify || notifySpy\n                ? {\n                    type: \"update\",\n                    object: this,\n                    oldValue: observable.value,\n                    name: key,\n                    newValue\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart(Object.assign(Object.assign({}, change), { name: this.name, key }));\n            observable.setNewValue(newValue);\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n        }\n    }\n    _addValue(key, newValue) {\n        checkIfStateModificationsAreAllowed(this._keysAtom);\n        transaction(() => {\n            const observable = new ObservableValue(newValue, this.enhancer, `${this.name}.${stringifyKey(key)}`, false);\n            this._data.set(key, observable);\n            newValue = observable.value; // value might have been changed\n            this._updateHasMapEntry(key, true);\n            this._keysAtom.reportChanged();\n        });\n        const notifySpy = isSpyEnabled();\n        const notify = hasListeners(this);\n        const change = notify || notifySpy\n            ? {\n                type: \"add\",\n                object: this,\n                name: key,\n                newValue\n            }\n            : null;\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportStart(Object.assign(Object.assign({}, change), { name: this.name, key }));\n        if (notify)\n            notifyListeners(this, change);\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportEnd();\n    }\n    get(key) {\n        if (this.has(key))\n            return this.dehanceValue(this._data.get(key).get());\n        return this.dehanceValue(undefined);\n    }\n    dehanceValue(value) {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value);\n        }\n        return value;\n    }\n    keys() {\n        this._keysAtom.reportObserved();\n        return this._data.keys();\n    }\n    values() {\n        const self = this;\n        let nextIndex = 0;\n        const keys = Array.from(this.keys());\n        return makeIterable({\n            next() {\n                return nextIndex < keys.length\n                    ? { value: self.get(keys[nextIndex++]), done: false }\n                    : { done: true };\n            }\n        });\n    }\n    entries() {\n        const self = this;\n        let nextIndex = 0;\n        const keys = Array.from(this.keys());\n        return makeIterable({\n            next: function () {\n                if (nextIndex < keys.length) {\n                    const key = keys[nextIndex++];\n                    return {\n                        value: [key, self.get(key)],\n                        done: false\n                    };\n                }\n                return { done: true };\n            }\n        });\n    }\n    [(_a = $mobx, Symbol.iterator)]() {\n        return this.entries();\n    }\n    forEach(callback, thisArg) {\n        for (const [key, value] of this)\n            callback.call(thisArg, value, key, this);\n    }\n    /** Merge another object into this object, returns this. */\n    merge(other) {\n        if (isObservableMap(other)) {\n            other = other.toJS();\n        }\n        transaction(() => {\n            if (isPlainObject(other))\n                getPlainObjectKeys(other).forEach(key => this.set(key, other[key]));\n            else if (Array.isArray(other))\n                other.forEach(([key, value]) => this.set(key, value));\n            else if (isES6Map(other)) {\n                if (other.constructor !== Map)\n                    fail(\"Cannot initialize from classes that inherit from Map: \" + other.constructor.name); // prettier-ignore\n                other.forEach((value, key) => this.set(key, value));\n            }\n            else if (other !== null && other !== undefined)\n                fail(\"Cannot initialize map from \" + other);\n        });\n        return this;\n    }\n    clear() {\n        transaction(() => {\n            untracked(() => {\n                for (const key of this.keys())\n                    this.delete(key);\n            });\n        });\n    }\n    replace(values) {\n        transaction(() => {\n            // grab all the keys that are present in the new map but not present in the current map\n            // and delete them from the map, then merge the new map\n            // this will cause reactions only on changed values\n            const newKeys = getMapLikeKeys(values);\n            const oldKeys = Array.from(this.keys());\n            const missingKeys = oldKeys.filter(k => newKeys.indexOf(k) === -1);\n            missingKeys.forEach(k => this.delete(k));\n            this.merge(values);\n        });\n        return this;\n    }\n    get size() {\n        this._keysAtom.reportObserved();\n        return this._data.size;\n    }\n    /**\n     * Returns a plain object that represents this map.\n     * Note that all the keys being stringified.\n     * If there are duplicating keys after converting them to strings, behaviour is undetermined.\n     */\n    toPOJO() {\n        const res = {};\n        for (const [key, value] of this) {\n            // We lie about symbol key types due to https://github.com/Microsoft/TypeScript/issues/1863\n            res[typeof key === \"symbol\" ? key : stringifyKey(key)] = value;\n        }\n        return res;\n    }\n    /**\n     * Returns a shallow non observable object clone of this map.\n     * Note that the values migth still be observable. For a deep clone use mobx.toJS.\n     */\n    toJS() {\n        return new Map(this);\n    }\n    toJSON() {\n        // Used by JSON.stringify\n        return this.toPOJO();\n    }\n    toString() {\n        return (this.name +\n            \"[{ \" +\n            Array.from(this.keys())\n                .map(key => `${stringifyKey(key)}: ${\"\" + this.get(key)}`)\n                .join(\", \") +\n            \" }]\");\n    }\n    /**\n     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n     * for callback details\n     */\n    observe(listener, fireImmediately) {\n        process.env.NODE_ENV !== \"production\" &&\n            invariant(fireImmediately !== true, \"`observe` doesn't support fireImmediately=true in combination with maps.\");\n        return registerListener(this, listener);\n    }\n    intercept(handler) {\n        return registerInterceptor(this, handler);\n    }\n}\n/* 'var' fixes small-build issue */\nconst isObservableMap = createInstanceofPredicate(\"ObservableMap\", ObservableMap);\n\nvar _a$1;\nconst ObservableSetMarker = {};\nclass ObservableSet {\n    constructor(initialData, enhancer = deepEnhancer, name = \"ObservableSet@\" + getNextId()) {\n        this.name = name;\n        this[_a$1] = ObservableSetMarker;\n        this._data = new Set();\n        this._atom = createAtom(this.name);\n        this[Symbol.toStringTag] = \"Set\";\n        if (typeof Set !== \"function\") {\n            throw new Error(\"mobx.set requires Set polyfill for the current browser. Check babel-polyfill or core-js/es6/set.js\");\n        }\n        this.enhancer = (newV, oldV) => enhancer(newV, oldV, name);\n        if (initialData) {\n            this.replace(initialData);\n        }\n    }\n    dehanceValue(value) {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value);\n        }\n        return value;\n    }\n    clear() {\n        transaction(() => {\n            untracked(() => {\n                for (const value of this._data.values())\n                    this.delete(value);\n            });\n        });\n    }\n    forEach(callbackFn, thisArg) {\n        for (const value of this) {\n            callbackFn.call(thisArg, value, value, this);\n        }\n    }\n    get size() {\n        this._atom.reportObserved();\n        return this._data.size;\n    }\n    add(value) {\n        checkIfStateModificationsAreAllowed(this._atom);\n        if (hasInterceptors(this)) {\n            const change = interceptChange(this, {\n                type: \"add\",\n                object: this,\n                newValue: value\n            });\n            if (!change)\n                return this;\n            // TODO: ideally, value = change.value would be done here, so that values can be\n            // changed by interceptor. Same applies for other Set and Map api's.\n        }\n        if (!this.has(value)) {\n            transaction(() => {\n                this._data.add(this.enhancer(value, undefined));\n                this._atom.reportChanged();\n            });\n            const notifySpy = isSpyEnabled();\n            const notify = hasListeners(this);\n            const change = notify || notifySpy\n                ? {\n                    type: \"add\",\n                    object: this,\n                    newValue: value\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart(change);\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n        }\n        return this;\n    }\n    delete(value) {\n        if (hasInterceptors(this)) {\n            const change = interceptChange(this, {\n                type: \"delete\",\n                object: this,\n                oldValue: value\n            });\n            if (!change)\n                return false;\n        }\n        if (this.has(value)) {\n            const notifySpy = isSpyEnabled();\n            const notify = hasListeners(this);\n            const change = notify || notifySpy\n                ? {\n                    type: \"delete\",\n                    object: this,\n                    oldValue: value\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart(Object.assign(Object.assign({}, change), { name: this.name }));\n            transaction(() => {\n                this._atom.reportChanged();\n                this._data.delete(value);\n            });\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n            return true;\n        }\n        return false;\n    }\n    has(value) {\n        this._atom.reportObserved();\n        return this._data.has(this.dehanceValue(value));\n    }\n    entries() {\n        let nextIndex = 0;\n        const keys = Array.from(this.keys());\n        const values = Array.from(this.values());\n        return makeIterable({\n            next() {\n                const index = nextIndex;\n                nextIndex += 1;\n                return index < values.length\n                    ? { value: [keys[index], values[index]], done: false }\n                    : { done: true };\n            }\n        });\n    }\n    keys() {\n        return this.values();\n    }\n    values() {\n        this._atom.reportObserved();\n        const self = this;\n        let nextIndex = 0;\n        const observableValues = Array.from(this._data.values());\n        return makeIterable({\n            next() {\n                return nextIndex < observableValues.length\n                    ? { value: self.dehanceValue(observableValues[nextIndex++]), done: false }\n                    : { done: true };\n            }\n        });\n    }\n    replace(other) {\n        if (isObservableSet(other)) {\n            other = other.toJS();\n        }\n        transaction(() => {\n            if (Array.isArray(other)) {\n                this.clear();\n                other.forEach(value => this.add(value));\n            }\n            else if (isES6Set(other)) {\n                this.clear();\n                other.forEach(value => this.add(value));\n            }\n            else if (other !== null && other !== undefined) {\n                fail(\"Cannot initialize set from \" + other);\n            }\n        });\n        return this;\n    }\n    observe(listener, fireImmediately) {\n        // TODO 'fireImmediately' can be true?\n        process.env.NODE_ENV !== \"production\" &&\n            invariant(fireImmediately !== true, \"`observe` doesn't support fireImmediately=true in combination with sets.\");\n        return registerListener(this, listener);\n    }\n    intercept(handler) {\n        return registerInterceptor(this, handler);\n    }\n    toJS() {\n        return new Set(this);\n    }\n    toString() {\n        return this.name + \"[ \" + Array.from(this).join(\", \") + \" ]\";\n    }\n    [(_a$1 = $mobx, Symbol.iterator)]() {\n        return this.values();\n    }\n}\nconst isObservableSet = createInstanceofPredicate(\"ObservableSet\", ObservableSet);\n\nclass ObservableObjectAdministration {\n    constructor(target, values = new Map(), name, defaultEnhancer) {\n        this.target = target;\n        this.values = values;\n        this.name = name;\n        this.defaultEnhancer = defaultEnhancer;\n        this.keysAtom = new Atom(name + \".keys\");\n    }\n    read(key) {\n        return this.values.get(key).get();\n    }\n    write(key, newValue) {\n        const instance = this.target;\n        const observable = this.values.get(key);\n        if (observable instanceof ComputedValue) {\n            observable.set(newValue);\n            return;\n        }\n        // intercept\n        if (hasInterceptors(this)) {\n            const change = interceptChange(this, {\n                type: \"update\",\n                object: this.proxy || instance,\n                name: key,\n                newValue\n            });\n            if (!change)\n                return;\n            newValue = change.newValue;\n        }\n        newValue = observable.prepareNewValue(newValue);\n        // notify spy & observers\n        if (newValue !== globalState.UNCHANGED) {\n            const notify = hasListeners(this);\n            const notifySpy = isSpyEnabled();\n            const change = notify || notifySpy\n                ? {\n                    type: \"update\",\n                    object: this.proxy || instance,\n                    oldValue: observable.value,\n                    name: key,\n                    newValue\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart(Object.assign(Object.assign({}, change), { name: this.name, key }));\n            observable.setNewValue(newValue);\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n        }\n    }\n    has(key) {\n        const map = this.pendingKeys || (this.pendingKeys = new Map());\n        let entry = map.get(key);\n        if (entry)\n            return entry.get();\n        else {\n            const exists = !!this.values.get(key);\n            // Possible optimization: Don't have a separate map for non existing keys,\n            // but store them in the values map instead, using a special symbol to denote \"not existing\"\n            entry = new ObservableValue(exists, referenceEnhancer, `${this.name}.${stringifyKey(key)}?`, false);\n            map.set(key, entry);\n            return entry.get(); // read to subscribe\n        }\n    }\n    addObservableProp(propName, newValue, enhancer = this.defaultEnhancer) {\n        const { target } = this;\n        assertPropertyConfigurable(target, propName);\n        if (hasInterceptors(this)) {\n            const change = interceptChange(this, {\n                object: this.proxy || target,\n                name: propName,\n                type: \"add\",\n                newValue\n            });\n            if (!change)\n                return;\n            newValue = change.newValue;\n        }\n        const observable = new ObservableValue(newValue, enhancer, `${this.name}.${stringifyKey(propName)}`, false);\n        this.values.set(propName, observable);\n        newValue = observable.value; // observableValue might have changed it\n        Object.defineProperty(target, propName, generateObservablePropConfig(propName));\n        this.notifyPropertyAddition(propName, newValue);\n    }\n    addComputedProp(propertyOwner, // where is the property declared?\n    propName, options) {\n        const { target } = this;\n        options.name = options.name || `${this.name}.${stringifyKey(propName)}`;\n        this.values.set(propName, new ComputedValue(options));\n        if (propertyOwner === target || isPropertyConfigurable(propertyOwner, propName))\n            Object.defineProperty(propertyOwner, propName, generateComputedPropConfig(propName));\n    }\n    remove(key) {\n        if (!this.values.has(key))\n            return;\n        const { target } = this;\n        if (hasInterceptors(this)) {\n            const change = interceptChange(this, {\n                object: this.proxy || target,\n                name: key,\n                type: \"remove\"\n            });\n            if (!change)\n                return;\n        }\n        try {\n            startBatch();\n            const notify = hasListeners(this);\n            const notifySpy = isSpyEnabled();\n            const oldObservable = this.values.get(key);\n            const oldValue = oldObservable && oldObservable.get();\n            oldObservable && oldObservable.set(undefined);\n            // notify key and keyset listeners\n            this.keysAtom.reportChanged();\n            this.values.delete(key);\n            if (this.pendingKeys) {\n                const entry = this.pendingKeys.get(key);\n                if (entry)\n                    entry.set(false);\n            }\n            // delete the prop\n            delete this.target[key];\n            const change = notify || notifySpy\n                ? {\n                    type: \"remove\",\n                    object: this.proxy || target,\n                    oldValue: oldValue,\n                    name: key\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart(Object.assign(Object.assign({}, change), { name: this.name, key }));\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd();\n        }\n        finally {\n            endBatch();\n        }\n    }\n    illegalAccess(owner, propName) {\n        /**\n         * This happens if a property is accessed through the prototype chain, but the property was\n         * declared directly as own property on the prototype.\n         *\n         * E.g.:\n         * class A {\n         * }\n         * extendObservable(A.prototype, { x: 1 })\n         *\n         * classB extens A {\n         * }\n         * console.log(new B().x)\n         *\n         * It is unclear whether the property should be considered 'static' or inherited.\n         * Either use `console.log(A.x)`\n         * or: decorate(A, { x: observable })\n         *\n         * When using decorate, the property will always be redeclared as own property on the actual instance\n         */\n        console.warn(`Property '${propName}' of '${owner}' was accessed through the prototype chain. Use 'decorate' instead to declare the prop or access it statically through it's owner`);\n    }\n    /**\n     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n     * for callback details\n     */\n    observe(callback, fireImmediately) {\n        process.env.NODE_ENV !== \"production\" &&\n            invariant(fireImmediately !== true, \"`observe` doesn't support the fire immediately property for observable objects.\");\n        return registerListener(this, callback);\n    }\n    intercept(handler) {\n        return registerInterceptor(this, handler);\n    }\n    notifyPropertyAddition(key, newValue) {\n        const notify = hasListeners(this);\n        const notifySpy = isSpyEnabled();\n        const change = notify || notifySpy\n            ? {\n                type: \"add\",\n                object: this.proxy || this.target,\n                name: key,\n                newValue\n            }\n            : null;\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportStart(Object.assign(Object.assign({}, change), { name: this.name, key }));\n        if (notify)\n            notifyListeners(this, change);\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportEnd();\n        if (this.pendingKeys) {\n            const entry = this.pendingKeys.get(key);\n            if (entry)\n                entry.set(true);\n        }\n        this.keysAtom.reportChanged();\n    }\n    getKeys() {\n        this.keysAtom.reportObserved();\n        // return Reflect.ownKeys(this.values) as any\n        const res = [];\n        for (const [key, value] of this.values)\n            if (value instanceof ObservableValue)\n                res.push(key);\n        return res;\n    }\n}\nfunction asObservableObject(target, name = \"\", defaultEnhancer = deepEnhancer) {\n    if (Object.prototype.hasOwnProperty.call(target, $mobx))\n        return target[$mobx];\n    process.env.NODE_ENV !== \"production\" &&\n        invariant(Object.isExtensible(target), \"Cannot make the designated object observable; it is not extensible\");\n    if (!isPlainObject(target))\n        name = (target.constructor.name || \"ObservableObject\") + \"@\" + getNextId();\n    if (!name)\n        name = \"ObservableObject@\" + getNextId();\n    const adm = new ObservableObjectAdministration(target, new Map(), stringifyKey(name), defaultEnhancer);\n    addHiddenProp(target, $mobx, adm);\n    return adm;\n}\nconst observablePropertyConfigs = Object.create(null);\nconst computedPropertyConfigs = Object.create(null);\nfunction generateObservablePropConfig(propName) {\n    return (observablePropertyConfigs[propName] ||\n        (observablePropertyConfigs[propName] = {\n            configurable: true,\n            enumerable: true,\n            get() {\n                return this[$mobx].read(propName);\n            },\n            set(v) {\n                this[$mobx].write(propName, v);\n            }\n        }));\n}\nfunction getAdministrationForComputedPropOwner(owner) {\n    const adm = owner[$mobx];\n    if (!adm) {\n        // because computed props are declared on proty,\n        // the current instance might not have been initialized yet\n        initializeInstance(owner);\n        return owner[$mobx];\n    }\n    return adm;\n}\nfunction generateComputedPropConfig(propName) {\n    return (computedPropertyConfigs[propName] ||\n        (computedPropertyConfigs[propName] = {\n            configurable: globalState.computedConfigurable,\n            enumerable: false,\n            get() {\n                return getAdministrationForComputedPropOwner(this).read(propName);\n            },\n            set(v) {\n                getAdministrationForComputedPropOwner(this).write(propName, v);\n            }\n        }));\n}\nconst isObservableObjectAdministration = createInstanceofPredicate(\"ObservableObjectAdministration\", ObservableObjectAdministration);\nfunction isObservableObject(thing) {\n    if (isObject(thing)) {\n        // Initializers run lazily when transpiling to babel, so make sure they are run...\n        initializeInstance(thing);\n        return isObservableObjectAdministration(thing[$mobx]);\n    }\n    return false;\n}\n\nfunction getAtom(thing, property) {\n    if (typeof thing === \"object\" && thing !== null) {\n        if (isObservableArray(thing)) {\n            if (property !== undefined)\n                fail(process.env.NODE_ENV !== \"production\" &&\n                    \"It is not possible to get index atoms from arrays\");\n            return thing[$mobx].atom;\n        }\n        if (isObservableSet(thing)) {\n            return thing[$mobx];\n        }\n        if (isObservableMap(thing)) {\n            const anyThing = thing;\n            if (property === undefined)\n                return anyThing._keysAtom;\n            const observable = anyThing._data.get(property) || anyThing._hasMap.get(property);\n            if (!observable)\n                fail(process.env.NODE_ENV !== \"production\" &&\n                    `the entry '${property}' does not exist in the observable map '${getDebugName(thing)}'`);\n            return observable;\n        }\n        // Initializers run lazily when transpiling to babel, so make sure they are run...\n        initializeInstance(thing);\n        if (property && !thing[$mobx])\n            thing[property]; // See #1072\n        if (isObservableObject(thing)) {\n            if (!property)\n                return fail(process.env.NODE_ENV !== \"production\" && `please specify a property`);\n            const observable = thing[$mobx].values.get(property);\n            if (!observable)\n                fail(process.env.NODE_ENV !== \"production\" &&\n                    `no observable property '${property}' found on the observable object '${getDebugName(thing)}'`);\n            return observable;\n        }\n        if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {\n            return thing;\n        }\n    }\n    else if (typeof thing === \"function\") {\n        if (isReaction(thing[$mobx])) {\n            // disposer function\n            return thing[$mobx];\n        }\n    }\n    return fail(process.env.NODE_ENV !== \"production\" && \"Cannot obtain atom from \" + thing);\n}\nfunction getAdministration(thing, property) {\n    if (!thing)\n        fail(\"Expecting some object\");\n    if (property !== undefined)\n        return getAdministration(getAtom(thing, property));\n    if (isAtom(thing) || isComputedValue(thing) || isReaction(thing))\n        return thing;\n    if (isObservableMap(thing) || isObservableSet(thing))\n        return thing;\n    // Initializers run lazily when transpiling to babel, so make sure they are run...\n    initializeInstance(thing);\n    if (thing[$mobx])\n        return thing[$mobx];\n    fail(process.env.NODE_ENV !== \"production\" && \"Cannot obtain administration from \" + thing);\n}\nfunction getDebugName(thing, property) {\n    let named;\n    if (property !== undefined)\n        named = getAtom(thing, property);\n    else if (isObservableObject(thing) || isObservableMap(thing) || isObservableSet(thing))\n        named = getAdministration(thing);\n    else\n        named = getAtom(thing); // valid for arrays as well\n    return named.name;\n}\n\nconst toString = Object.prototype.toString;\nfunction deepEqual(a, b, depth = -1) {\n    return eq(a, b, depth);\n}\n// Copied from https://github.com/jashkenas/underscore/blob/5c237a7c682fb68fd5378203f0bf22dce1624854/underscore.js#L1186-L1289\n// Internal recursive comparison function for `isEqual`.\nfunction eq(a, b, depth, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b)\n        return a !== 0 || 1 / a === 1 / b;\n    // `null` or `undefined` only equal to itself (strict comparison).\n    if (a == null || b == null)\n        return false;\n    // `NaN`s are equivalent, but non-reflexive.\n    if (a !== a)\n        return b !== b;\n    // Exhaust primitive checks\n    const type = typeof a;\n    if (type !== \"function\" && type !== \"object\" && typeof b != \"object\")\n        return false;\n    // Unwrap any wrapped objects.\n    a = unwrap(a);\n    b = unwrap(b);\n    // Compare `[[Class]]` names.\n    const className = toString.call(a);\n    if (className !== toString.call(b))\n        return false;\n    switch (className) {\n        // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n        case \"[object RegExp]\":\n        // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n        case \"[object String]\":\n            // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n            // equivalent to `new String(\"5\")`.\n            return \"\" + a === \"\" + b;\n        case \"[object Number]\":\n            // `NaN`s are equivalent, but non-reflexive.\n            // Object(NaN) is equivalent to NaN.\n            if (+a !== +a)\n                return +b !== +b;\n            // An `egal` comparison is performed for other numeric values.\n            return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n        case \"[object Date]\":\n        case \"[object Boolean]\":\n            // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n            // millisecond representations. Note that invalid dates with millisecond representations\n            // of `NaN` are not equivalent.\n            return +a === +b;\n        case \"[object Symbol]\":\n            return (typeof Symbol !== \"undefined\" && Symbol.valueOf.call(a) === Symbol.valueOf.call(b));\n    }\n    const areArrays = className === \"[object Array]\";\n    if (!areArrays) {\n        if (typeof a != \"object\" || typeof b != \"object\")\n            return false;\n        // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n        // from different frames are.\n        const aCtor = a.constructor, bCtor = b.constructor;\n        if (aCtor !== bCtor &&\n            !(typeof aCtor === \"function\" &&\n                aCtor instanceof aCtor &&\n                typeof bCtor === \"function\" &&\n                bCtor instanceof bCtor) &&\n            (\"constructor\" in a && \"constructor\" in b)) {\n            return false;\n        }\n    }\n    if (depth === 0) {\n        return false;\n    }\n    else if (depth < 0) {\n        depth = -1;\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    let length = aStack.length;\n    while (length--) {\n        // Linear search. Performance is inversely proportional to the number of\n        // unique nested structures.\n        if (aStack[length] === a)\n            return bStack[length] === b;\n    }\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n        // Compare array lengths to determine if a deep comparison is necessary.\n        length = a.length;\n        if (length !== b.length)\n            return false;\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (length--) {\n            if (!eq(a[length], b[length], depth - 1, aStack, bStack))\n                return false;\n        }\n    }\n    else {\n        // Deep compare objects.\n        const keys = Object.keys(a);\n        let key;\n        length = keys.length;\n        // Ensure that both objects contain the same number of properties before comparing deep equality.\n        if (Object.keys(b).length !== length)\n            return false;\n        while (length--) {\n            // Deep compare each member\n            key = keys[length];\n            if (!(has$1(b, key) && eq(a[key], b[key], depth - 1, aStack, bStack)))\n                return false;\n        }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n}\nfunction unwrap(a) {\n    if (isObservableArray(a))\n        return a.slice();\n    if (isES6Map(a) || isObservableMap(a))\n        return Array.from(a.entries());\n    if (isES6Set(a) || isObservableSet(a))\n        return Array.from(a.entries());\n    return a;\n}\nfunction has$1(a, key) {\n    return Object.prototype.hasOwnProperty.call(a, key);\n}\n\nfunction makeIterable(iterator) {\n    iterator[Symbol.iterator] = getSelf;\n    return iterator;\n}\nfunction getSelf() {\n    return this;\n}\n\n/*\nThe only reason for this file to exist is pure horror:\nWithout it rollup can make the bundling fail at any point in time; when it rolls up the files in the wrong order\nit will cause undefined errors (for example because super classes or local variables not being hoisted).\nWith this file that will still happen,\nbut at least in this file we can magically reorder the imports with trial and error until the build succeeds again.\n*/\n\n/**\n * (c) Michel Weststrate 2015 - 2018\n * MIT Licensed\n *\n * Welcome to the mobx sources! To get an global overview of how MobX internally works,\n * this is a good place to start:\n * https://medium.com/@mweststrate/becoming-fully-reactive-an-in-depth-explanation-of-mobservable-55995262a254#.xvbh6qd74\n *\n * Source folders:\n * ===============\n *\n * - api/     Most of the public static methods exposed by the module can be found here.\n * - core/    Implementation of the MobX algorithm; atoms, derivations, reactions, dependency trees, optimizations. Cool stuff can be found here.\n * - types/   All the magic that is need to have observable objects, arrays and values is in this folder. Including the modifiers like `asFlat`.\n * - utils/   Utility stuff.\n *\n */\nif (typeof Proxy === \"undefined\" || typeof Symbol === \"undefined\") {\n    throw new Error(\"[mobx] MobX 5+ requires Proxy and Symbol objects. If your environment doesn't support Symbol or Proxy objects, please downgrade to MobX 4. For React Native Android, consider upgrading JSCore.\");\n}\ntry {\n    // define process.env if needed\n    // if this is not a production build in the first place\n    // (in which case the expression below would be substituted with 'production')\n    process.env.NODE_ENV;\n}\ncatch (e) {\n    const g = getGlobal();\n    if (typeof process === \"undefined\")\n        g.process = {};\n    g.process.env = {};\n}\n(() => {\n    function testCodeMinification() { }\n    if (testCodeMinification.name !== \"testCodeMinification\" &&\n        process.env.NODE_ENV !== \"production\" &&\n        process.env.IGNORE_MOBX_MINIFY_WARNING !== \"true\") {\n        // trick so it doesn't get replaced\n        const varName = [\"process\", \"env\", \"NODE_ENV\"].join(\".\");\n        console.warn(`[mobx] you are running a minified build, but '${varName}' was not set to 'production' in your bundler. This results in an unnecessarily large and slow bundle`);\n    }\n})();\nif (typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === \"object\") {\n    // See: https://github.com/andykog/mobx-devtools/\n    __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({\n        spy,\n        extras: {\n            getDebugName\n        },\n        $mobx\n    });\n}\n\nexport { $mobx, FlowCancellationError, IDerivationState, ObservableMap, ObservableSet, Reaction, allowStateChanges as _allowStateChanges, allowStateChangesInsideComputed as _allowStateChangesInsideComputed, _endAction, getAdministration as _getAdministration, getGlobalState as _getGlobalState, interceptReads as _interceptReads, isComputingDerivation as _isComputingDerivation, resetGlobalState as _resetGlobalState, _startAction, action, autorun, comparer, computed, configure, createAtom, decorate, entries, extendObservable, flow, get, getAtom, getDebugName, getDependencyTree, getObserverTree, has, intercept, isAction, isArrayLike, isObservableValue as isBoxedObservable, isComputed, isComputedProp, isFlowCancellationError, isObservable, isObservableArray, isObservableMap, isObservableObject, isObservableProp, isObservableSet, keys, observable, observe, onBecomeObserved, onBecomeUnobserved, onReactionError, reaction, remove, runInAction, set, spy, toJS, trace, transaction, untracked, values, when };\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n","import { _catchError } from './diff/catch-error';\n\n/** @type {import('./internal').Options}  */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\tupdate = update(s, this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tthis._force = false;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type === 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tlet newDom = diff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\tassign({}, vnode),\n\t\t\tcomponent._context,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tnull,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (newDom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet q = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty && (c._dirty = true) && q.push(c) === 1) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet p;\n\tq.sort((a, b) => b._vnode._depth - a._vnode._depth);\n\twhile ((p = q.pop())) {\n\t\t// forceUpdate's callback argument is reused here to indicate a non-forced update.\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\n\nconst IS_HYDRATE = EMPTY_OBJ;\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./index').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {Element | Text} [replaceNode] Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\tlet isHydrating = replaceNode === IS_HYDRATE;\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\tvnode = createElement(Fragment, null, [vnode]);\n\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t((isHydrating ? parentDom : replaceNode || parentDom)._children = vnode),\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\treplaceNode && !isHydrating\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: EMPTY_ARR.slice.call(parentDom.childNodes),\n\t\tcommitQueue,\n\t\treplaceNode || EMPTY_OBJ,\n\t\tisHydrating\n\t);\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./index').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, IS_HYDRATE);\n}\n","/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n","import options from './options';\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\ti;\n\tfor (i in props) {\n\t\tif (i !== 'key' && i !== 'ref') normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 3) {\n\t\tchildren = [children];\n\t\t// https://github.com/preactjs/preact/issues/1916\n\t\tfor (i = 3; i < arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children != null) {\n\t\tnormalizedProps.children = children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type === 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(\n\t\ttype,\n\t\tnormalizedProps,\n\t\tprops && props.key,\n\t\tprops && props.ref\n\t);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t_lastDomChild: null,\n\t\t_component: null,\n\t\tconstructor: undefined\n\t};\n\n\tif (options.vnode) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn {};\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { removeNode } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {Node | Text} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\tnewParentVNode,\n\toldParentVNode,\n\tcontext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, newDom, sibDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\t// Only in very specific places should this logic be invoked (top level `render` and `diffElementNodes`).\n\t// I'm using `EMPTY_OBJ` to signal when `diffChildren` is invoked in these situations. I can't use `null`\n\t// for this purpose, because `null` is a valid value for `oldDom` which can mean to skip to this logic\n\t// (e.g. if mounting a new tree in which the old DOM should be ignored (usually for Fragments).\n\tif (oldDom == EMPTY_OBJ) {\n\t\tif (excessDomChildren != null) {\n\t\t\toldDom = excessDomChildren[0];\n\t\t} else if (oldChildrenLength) {\n\t\t\toldDom = getDomSibling(oldParentVNode, 0);\n\t\t} else {\n\t\t\toldDom = null;\n\t\t}\n\t}\n\n\ti = 0;\n\tnewParentVNode._children = toChildArray(\n\t\tnewParentVNode._children,\n\t\tchildVNode => {\n\t\t\tif (childVNode != null) {\n\t\t\t\tchildVNode._parent = newParentVNode;\n\t\t\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t\t\t// Check if we find a corresponding element in oldChildren.\n\t\t\t\t// If found, delete the array item by setting to `undefined`.\n\t\t\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t\t\t// (holes).\n\t\t\t\toldVNode = oldChildren[i];\n\n\t\t\t\tif (\n\t\t\t\t\toldVNode === null ||\n\t\t\t\t\t(oldVNode &&\n\t\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t\t\t) {\n\t\t\t\t\toldChildren[i] = undefined;\n\t\t\t\t} else {\n\t\t\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t\t\t// We always match by type (in either case).\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\toldVNode &&\n\t\t\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\toldVNode = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\t\t\tnewDom = diff(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\tcontext,\n\t\t\t\t\tisSvg,\n\t\t\t\t\texcessDomChildren,\n\t\t\t\t\tcommitQueue,\n\t\t\t\t\toldDom,\n\t\t\t\t\tisHydrating\n\t\t\t\t);\n\n\t\t\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\t\t\tif (!refs) refs = [];\n\t\t\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t\t\t}\n\n\t\t\t\t// Only proceed if the vnode has not been unmounted by `diff()` above.\n\t\t\t\tif (newDom != null) {\n\t\t\t\t\tif (firstChildDom == null) {\n\t\t\t\t\t\tfirstChildDom = newDom;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (childVNode._lastDomChild != null) {\n\t\t\t\t\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t\t\t\t\t// have a non-null _lastDomChild. Continue the diff from the end of\n\t\t\t\t\t\t// this Fragment's DOM tree.\n\t\t\t\t\t\tnewDom = childVNode._lastDomChild;\n\n\t\t\t\t\t\t// Eagerly cleanup _lastDomChild. We don't need to persist the value because\n\t\t\t\t\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t\t\t\t\t// diffing Components and Fragments.\n\t\t\t\t\t\tchildVNode._lastDomChild = null;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\texcessDomChildren == oldVNode ||\n\t\t\t\t\t\tnewDom != oldDom ||\n\t\t\t\t\t\tnewDom.parentNode == null\n\t\t\t\t\t) {\n\t\t\t\t\t\t// NOTE: excessDomChildren==oldVNode above:\n\t\t\t\t\t\t// This is a compression of excessDomChildren==null && oldVNode==null!\n\t\t\t\t\t\t// The values only have the same type when `null`.\n\n\t\t\t\t\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\t\t\t\t\tparentDom.appendChild(newDom);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\t\tsibDom = oldDom, j = 0;\n\t\t\t\t\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildrenLength;\n\t\t\t\t\t\t\t\tj += 2\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\t\t\t\t\tbreak outer;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Browsers will infer an option's `value` from `textContent` when\n\t\t\t\t\t\t// no value is present. This essentially bypasses our code to set it\n\t\t\t\t\t\t// later in `diff()`. It works fine in all browsers except for IE11\n\t\t\t\t\t\t// where it breaks setting `select.value`. There it will be always set\n\t\t\t\t\t\t// to an empty string. Re-applying an options value will fix that, so\n\t\t\t\t\t\t// there are probably some internal data structures that aren't\n\t\t\t\t\t\t// updated properly.\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// To fix it we make sure to reset the inferred value, so that our own\n\t\t\t\t\t\t// value check in `diff()` won't be skipped.\n\t\t\t\t\t\tif (newParentVNode.type == 'option') {\n\t\t\t\t\t\t\tparentDom.value = '';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\toldDom = newDom.nextSibling;\n\n\t\t\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t\t\t// At this point, if childVNode._lastDomChild existed, then\n\t\t\t\t\t\t// newDom = childVNode._lastDomChild per line 101. Else it is\n\t\t\t\t\t\t// the same as childVNode._dom, meaning this component returned\n\t\t\t\t\t\t// only a single DOM node\n\t\t\t\t\t\tnewParentVNode._lastDomChild = newDom;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti++;\n\t\t\treturn childVNode;\n\t\t}\n\t);\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove children that are not part of any vnode.\n\tif (excessDomChildren != null && typeof newParentVNode.type !== 'function') {\n\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) unmount(oldChildren[i], oldChildren[i]);\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @param {(vnode: import('../internal').VNode) => import('../internal').VNode} [callback]\n * A function to invoke for each child before it is added to the flattened list.\n * @param {Array<import('../internal').VNode | string | number>} [flattened] An flat array of children to modify\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, callback, flattened) {\n\tif (flattened == null) flattened = [];\n\n\tif (children == null || typeof children === 'boolean') {\n\t\tif (callback) flattened.push(callback(null));\n\t} else if (Array.isArray(children)) {\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\ttoChildArray(children[i], callback, flattened);\n\t\t}\n\t} else if (!callback) {\n\t\tflattened.push(children);\n\t} else if (typeof children === 'string' || typeof children === 'number') {\n\t\tflattened.push(callback(createVNode(null, children, null, null)));\n\t} else if (children._dom != null || children._component != null) {\n\t\tflattened.push(\n\t\t\tcallback(createVNode(children.type, children.props, children.key, null))\n\t\t);\n\t} else {\n\t\tflattened.push(callback(children));\n\t}\n\n\treturn flattened;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (!(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (\n\t\ttypeof value === 'number' &&\n\t\tIS_NON_DIMENSIONAL.test(key) === false\n\t) {\n\t\tstyle[key] = value + 'px';\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else {\n\t\tstyle[key] = value;\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nfunction setProperty(dom, name, value, oldValue, isSvg) {\n\tif (isSvg) {\n\t\tif (name === 'className') {\n\t\t\tname = 'class';\n\t\t}\n\t} else if (name === 'class') {\n\t\tname = 'className';\n\t}\n\n\tif (name === 'key' || name === 'children') {\n\t} else if (name === 'style') {\n\t\tconst s = dom.style;\n\n\t\tif (typeof value === 'string') {\n\t\t\ts.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue === 'string') {\n\t\t\t\ts.cssText = '';\n\t\t\t\toldValue = null;\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (let i in oldValue) {\n\t\t\t\t\tif (!(value && i in value)) {\n\t\t\t\t\t\tsetStyle(s, i, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (let i in value) {\n\t\t\t\t\tif (!oldValue || value[i] !== oldValue[i]) {\n\t\t\t\t\t\tsetStyle(s, i, value[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tlet useCapture = name !== (name = name.replace(/Capture$/, ''));\n\t\tlet nameLower = name.toLowerCase();\n\t\tname = (nameLower in dom ? nameLower : name).slice(2);\n\n\t\tif (value) {\n\t\t\tif (!oldValue) dom.addEventListener(name, eventProxy, useCapture);\n\t\t\t(dom._listeners || (dom._listeners = {}))[name] = value;\n\t\t} else {\n\t\t\tdom.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t} else if (\n\t\tname !== 'list' &&\n\t\tname !== 'tagName' &&\n\t\t// HTMLButtonElement.form and HTMLInputElement.form are read-only but can be set using\n\t\t// setAttribute\n\t\tname !== 'form' &&\n\t\tname !== 'type' &&\n\t\t!isSvg &&\n\t\tname in dom\n\t) {\n\t\tdom[name] = value == null ? '' : value;\n\t} else if (\n\t\ttypeof value !== 'function' &&\n\t\tname !== 'dangerouslySetInnerHTML'\n\t) {\n\t\tif (name !== (name = name.replace(/^xlink:?/, ''))) {\n\t\t\tif (value == null || value === false) {\n\t\t\t\tdom.removeAttributeNS(\n\t\t\t\t\t'http://www.w3.org/1999/xlink',\n\t\t\t\t\tname.toLowerCase()\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tdom.setAttributeNS(\n\t\t\t\t\t'http://www.w3.org/1999/xlink',\n\t\t\t\t\tname.toLowerCase(),\n\t\t\t\t\tvalue\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (value == null || value === false) {\n\t\t\tdom.removeAttribute(name);\n\t\t} else {\n\t\t\tdom.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { Component } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren, toChildArray } from './children';\nimport { diffProps } from './props';\nimport { assign, removeNode } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {Element | Text} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tcontext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType === 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && context[tmp._id];\n\t\t\tlet cctx = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: context;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, cctx); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, cctx);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = cctx;\n\t\t\t\tc._context = context;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc._force == null &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, cctx);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!c._force &&\n\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\tc.shouldComponentUpdate(newProps, c._nextState, cctx) === false\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\t\t\t\t\tfor (tmp = 0; tmp < newVNode._children.length; tmp++) {\n\t\t\t\t\t\tif (newVNode._children[tmp]) {\n\t\t\t\t\t\t\tnewVNode._children[tmp]._parent = newVNode;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, cctx);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = cctx;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type == Fragment && tmp.key == null;\n\t\t\tnewVNode._children = toChildArray(\n\t\t\t\tisTopLevelFragment ? tmp.props.children : tmp\n\t\t\t);\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tcontext = assign(assign({}, context), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tcontext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = null;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tcontext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n\n\treturn newVNode._dom;\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tcontext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet i;\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvg = newVNode.type === 'svg' || isSvg;\n\n\tif (dom == null && excessDomChildren != null) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\tif (\n\t\t\t\tchild != null &&\n\t\t\t\t(newVNode.type === null\n\t\t\t\t\t? child.nodeType === 3\n\t\t\t\t\t: child.localName === newVNode.type)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (newVNode.type === null) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\t\tdom = isSvg\n\t\t\t? document.createElementNS('http://www.w3.org/2000/svg', newVNode.type)\n\t\t\t: document.createElement(newVNode.type);\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t}\n\n\tif (newVNode.type === null) {\n\t\tif (excessDomChildren != null) {\n\t\t\texcessDomChildren[excessDomChildren.indexOf(dom)] = null;\n\t\t}\n\n\t\tif (oldProps !== newProps) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else if (newVNode !== oldVNode) {\n\t\tif (excessDomChildren != null) {\n\t\t\texcessDomChildren = EMPTY_ARR.slice.call(dom.childNodes);\n\t\t}\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\tif (oldProps === EMPTY_OBJ) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (let i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (!newHtml || !oldHtml || newHtml.__html != oldHtml.__html) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\tnewVNode._children = newVNode.props.children;\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (!newHtml) {\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tcontext,\n\t\t\t\tnewVNode.type === 'foreignObject' ? false : isSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tEMPTY_OBJ,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\tnewProps.value !== undefined &&\n\t\t\t\tnewProps.value !== dom.value\n\t\t\t) {\n\t\t\t\tdom.value = newProps.value == null ? '' : newProps.value;\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\tnewProps.checked !== undefined &&\n\t\t\t\tnewProps.checked !== dom.checked\n\t\t\t) {\n\t\t\t\tdom.checked = newProps.checked;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tapplyRef(r, null, parentVNode);\n\t}\n\n\tlet dom;\n\tif (!skipRemove && typeof vnode.type !== 'function') {\n\t\tskipRemove = (dom = vnode._dom) != null;\n\t}\n\n\tvnode._dom = vnode._lastDomChild = null;\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) unmount(r[i], parentVNode, skipRemove);\n\t\t}\n\t}\n\n\tif (dom != null) removeNode(dom);\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { enqueueRender } from '../component';\n\n/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n */\nexport function _catchError(error, vnode) {\n\t/** @type {import('../internal').Component} */\n\tlet component;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tif (\n\t\t\t\t\tcomponent.constructor &&\n\t\t\t\t\tcomponent.constructor.getDerivedStateFromError != null\n\t\t\t\t) {\n\t\t\t\t\tcomponent.setState(\n\t\t\t\t\t\tcomponent.constructor.getDerivedStateFromError(error)\n\t\t\t\t\t);\n\t\t\t\t} else if (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\treturn enqueueRender((component._pendingError = component));\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { observable, computed } from 'mobx';\n\nexport class Store {\n  setData(data) {\n    \n  }\n}\n\nexport const store = new Store();","// import React from \"react\";\nimport { Component } from \"preact\";\nimport { store } from \"../store\";\n\nexport default class ModuleViewer extends Component {\n  render() {\n    return <div>ModuleViewer</div>;\n  }\n}\n","// import ReactDOM from \"react-dom\";\nimport {h,render} from 'preact';\nimport { store } from \"./store\";\nimport ModuleViewer from \"./components/module-viewer\";\n\nlet ws;\ntry {\n  if (window.enableWebSocket) {\n    ws = new WebSocket(`ws://${location.host}`);\n  }\n} catch (err) {\n  console.warn(\n    \"Couldn't connect to websocket server so you'll have to reload page manually to see updates\"\n  );\n}\n\nwindow.addEventListener(\"load\", () => {\n  store.setData(window);\n\n  render(<ModuleViewer/>, document.getElementById('app'));\n});\n"],"sourceRoot":""}